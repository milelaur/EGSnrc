%E
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc macros for component modules                                "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          George Ding, 1992                                         "
"                                                                             "
"  Contributors:    Dave Rogers                                               "
"                   Blake Walters                                             "
"                   Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Mortran macros for the component modules of BEAM. A header for definitions "
"  of $CM_LIST and $CM_TYPE which are added right after this by the scrips to "
"  the .mortjob.mortran file.                                                 "
"                                                                             "
"#############################################################################"


%L
%Q1
%C80
!INDENT F4;
!INDENT M4;
;
" **************************
" List of component modules:
" **************************
"
"  The list of identifiers of components to be included in the accelerator model
"  is defined in the $CM_LIST replacement macro.  This must be modified prior
"  to the MORTRAN compile step in order to generate an executable program with a
"  different sequence and set of component modules.  The component modules must
"  be listed in order of increasing Z.
"
"  The type of each component module is indicated in the $CM_TYPE macro.
"
"  This is the end of beam_cm_macros.hdr but the beam script will insert
"  a couple of macros here with the required lists.
"
" The following is an example for a 2 CM case using CM SLABS and CHAMBER,
"  identifiers FOILS and ION_CH
"
"  REPLACE{$CM_LIST} WITH {CMLIST(
"         ION_CH,
"         FOILS
"     )}
"  REPLACE{$CM_TYPE} WITH {CMTYPE(
"         CHAMBER,
"         SLABS
"     )}
"=======end of example, following this is the real thing============"
"
REPLACE{$CM_LIST} WITH {CMLIST(
      TARGET,
      PRIMCOLL,
      FLATTENF,
      CHAMBER,
      MIRROR,
      SECJAWS,
      AIRSLAB
   )}
REPLACE{$CM_TYPE} WITH {CMTYPE(
      SLABS,
      CONS3R,
      FLATFILT,
      CHAMBER,
      MIRROR,
      JAWS,
      SLABS
   )}
REPLACE{$SYNC_CM_LIST} WITH {SYNCCMLIST(
      END_SYNC_CMS
   )}
REPLACE{$DYN_CM_LIST} WITH {DYNCMLIST(
      END_DYN_CMS
   )}
REPLACE{$CM_TYPE} WITH {CMTYPE(
      SLABS,
      CONS3R,
      FLATFILT,
      CHAMBER,
      MIRROR,
      JAWS,
      SLABS
   )}
%C80
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc component module macros: stacked planes                     "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          Blake Walters, 1995                                       "
"                                                                             "
"  Contributors:    Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  This code originally evolved from the SLAB component module written by     "
"  Dave Rogers and Bruce Faddegon, starting in 1991, and subsequently edited  "
"  by George Ding.                                                            "
"                                                                             "
"  The contributors named above are only those who could be identified from   "
"  this file's revision history.                                              "
"                                                                             "
"  This code was originally part of the BEAM code system for Monte Carlo      "
"  simulation of radiotherapy treatments units. It was developed at the       "
"  National Research Council of Canada as part of the OMEGA collaborative     "
"  research project with the University of Wisconsin. The system was          "
"  originally described in:                                                   "
"                                                                             "
"  BEAM: A Monte Carlo code to simulate radiotherapy treatment units,         "
"  DWO Rogers, BA Faddegon, GX Ding, C-M Ma, J Wei and TR Mackie,             "
"  Medical Physics 22, 503-524 (1995).                                        "
"                                                                             "
"  BEAM User Manual                                                           "
"  DWO Rogers, C-M Ma, B Walters, GX Ding, D Sheikh-Bagheri and G Zhang,      "
"  NRC Report PIRS-509A (rev D)                                               "
"                                                                             "
"  As well as the authors of this paper and report, Joanne Treurniet of NRC   "
"  made significant contributions to the code system, in particular the GUIs  "
"  and EGS_Windows. Mark Holmes, Brian Geiser and Paul Reckwerdt of Wisconsin "
"  played important roles in the overall OMEGA project within which the BEAM  "
"  code system was developed.                                                 "
"                                                                             "
"  There have been major upgrades in the BEAM code starting in 2000 which     "
"  have been heavily supported by Iwan Kawrakow, most notably: the port to    "
"  EGSnrc, the inclusion of history-by-history statistics and the development "
"  of the directional bremsstrahlung splitting variance reduction technique.  "
"                                                                             "
"#############################################################################"


"-------------------------------------------------------------------------------
"     TARGET (SLABS) miscellaneous replacement macros
"-------------------------------------------------------------------------------
"
REPLACE {$MAX_N_TARGET} WITH {30}          "maximum number of slabs"
;
"-------------------------------------------------------------------------------
"     TARGET component module common                 ""toc:
"-------------------------------------------------------------------------------
"
"V>COMMON/CM_TARGET/
"V>================
"V>ICM_TARGET          CM index, set =ICM in INPUT_TARGET and never re-set
"V>IRSTART_TARGET      first region number for this CM
"V>IREND_TARGET        last region number for this CM
"V>TITLE_TARGET        title of CM
"V>N_TARGET            number of slabs in CM
"V>N_GAP_TARGET        0 if no air gap this CM, = 1 if air gap at top of CM
"V>ZBACK_TARGET(IRL)   Downstream Z boundary of slab IRL in SLABS
"V>ZFRONT_TARGET(IRL)  Upstream Z boundary of slab IRL in SLABS
"V>ZTHICK_TARGET(IRL)  thickness of slab IRL
"V>IR_TARGET           local region number

REPLACE {;COMIN/CM_TARGET/;} WITH {
   ;COMMON/CM_TARGET/ICM_TARGET,IRSTART_TARGET,IREND_TARGET,
   N_TARGET,N_GAP_TARGET,TITLE_TARGET,ZBACK_TARGET,ZFRONT_TARGET,
   ZTHICK_TARGET,IR_TARGET;
   INTEGER ICM_TARGET,IRSTART_TARGET,IREND_TARGET,N_TARGET,
           N_GAP_TARGET,IR_TARGET;
   $REAL ZBACK_TARGET($MAX_N_TARGET),ZFRONT_TARGET($MAX_N_TARGET),
         ZTHICK_TARGET($MAX_N_TARGET);
   CHARACTER*1 TITLE_TARGET(60);
} "end of replacement defining common for this CM"
;
"-------------------------------------------------------------------------------
"     TARGET HOWNEAR replacement macro
"     Now just calls the HOWNEAR_TARGET subroutine
"-------------------------------------------------------------------------------
"
REPLACE {TARGET_CM_HOWNEAR(#)} WITH  {  "{P1} is DNEAR"
CALL HOWNEAR_TARGET({P1});
}
"end of SLABS_macros.mortran"
%C80
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc component module macros: 3-region stacked truncated cones   "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          Blake Walters, 1995                                       "
"                                                                             "
"  Contributors:    Dave Rogers                                               "
"                   Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  The contributors named above are only those who could be identified from   "
"  this file's revision history.                                              "
"                                                                             "
"  This code was originally part of the BEAM code system for Monte Carlo      "
"  simulation of radiotherapy treatments units. It was developed at the       "
"  National Research Council of Canada as part of the OMEGA collaborative     "
"  research project with the University of Wisconsin. The system was          "
"  originally described in:                                                   "
"                                                                             "
"  BEAM: A Monte Carlo code to simulate radiotherapy treatment units,         "
"  DWO Rogers, BA Faddegon, GX Ding, C-M Ma, J Wei and TR Mackie,             "
"  Medical Physics 22, 503-524 (1995).                                        "
"                                                                             "
"  BEAM User Manual                                                           "
"  DWO Rogers, C-M Ma, B Walters, GX Ding, D Sheikh-Bagheri and G Zhang,      "
"  NRC Report PIRS-509A (rev D)                                               "
"                                                                             "
"  As well as the authors of this paper and report, Joanne Treurniet of NRC   "
"  made significant contributions to the code system, in particular the GUIs  "
"  and EGS_Windows. Mark Holmes, Brian Geiser and Paul Reckwerdt of Wisconsin "
"  played important roles in the overall OMEGA project within which the BEAM  "
"  code system was developed.                                                 "
"                                                                             "
"  There have been major upgrades in the BEAM code starting in 2000 which     "
"  have been heavily supported by Iwan Kawrakow, most notably: the port to    "
"  EGSnrc, the inclusion of history-by-history statistics and the development "
"  of the directional bremsstrahlung splitting variance reduction technique.  "
"                                                                             "
"#############################################################################"


"-------------------------------------------------------------------------------
"     PRIMCOLL miscellaneous replacement macros
"-------------------------------------------------------------------------------
"
REPLACE {$MAX_N_PRIMCOLL} WITH {3}

" THE MAX # OF POINTS TO BE ALLOWED IN THIS MODULE
REPLACE {$NPOINT_PRIMCOLL} WITH {15}

"-------------------------------------------------------------------------------
"     CONS3R component module common
"-------------------------------------------------------------------------------
"
"V>COMMON/CM_PRIMCOLL/
"V>================
"V>ICM_PRIMCOLL        index of CM, set as ICM in INPUT_PRIMCOLL, never re-set
"V>IRSTART_PRIMCOLL    first region number for this CM
"V>IREND_PRIMCOLL      last region number for this CM
"V>N_PRIMCOLL          number of regions in CM
"V>TITLE_PRIMCOLL      title of CM
"V>ZMIN_PRIMCOLL       Front of polycone
"V>ZMAX_PRIMCOLL       back of polycone
"V>ZFRONT_PRIMCOLL     Upstream Z boundary of this CM
"V>NUM_NODE_PRIMCOLL   the number of node in this module
"V>INDEX_PRIMCOLL      the index to indicates the shape
"V>                  1: z coordinates are in the order without decrement
"V>                  0: any order
"V>                  this is very important for speed
"V>ZCORNER_PRIMCOLL($NPOINT_PRIMCOLL)   z coordinate of points
"V>RCORNER_PRIMCOLL($NPOINT_PRIMCOLL)   r coordinate of points
"V>RCORNER2_PRIMCOLL($NPOINT_PRIMCOLL)
"V>SURPARA_PRIMCOLL($NPOINT_PRIMCOLL-1,4)  params to describe the n-1 surfaces
"V>            cos(theta)*R + sin(theta)* Z - p =0
"V>            SURPARA(i,1) * R + SURPARA(i,2)*Z - SURPARA(i,3) = 0
"V>            SURPARA(i,4): the slope of the surface.
"V>RMIN_PRIMCOLL       minimum radius
"V>RMIN2_PRIMCOLL      minimum radius square
"V>IR_PRIMCOLL         local region number
"V>COUNT1_PRIMCOLL     counter for region check

REPLACE {;COMIN/CM_PRIMCOLL/;} WITH {
   ;COMMON/CM_PRIMCOLL/
      ICM_PRIMCOLL,  IRSTART_PRIMCOLL,  IREND_PRIMCOLL,
      N_PRIMCOLL,    N_GAP_PRIMCOLL, IR_PRIMCOLL,
      COUNT1_PRIMCOLL,
      TITLE_PRIMCOLL,   ZMIN_PRIMCOLL,     ZMAX_PRIMCOLL,
      ZFRONT_PRIMCOLL,  NUM_NODE_PRIMCOLL, INDEX_PRIMCOLL,
      ZCORNER_PRIMCOLL, RCORNER_PRIMCOLL,  RCORNER2_PRIMCOLL,
      SURPARA_PRIMCOLL, RMIN_PRIMCOLL,     RMIN2_PRIMCOLL,
      CRITOLD_PRIMCOLL;
   INTEGER
      ICM_PRIMCOLL,  IRSTART_PRIMCOLL,  IREND_PRIMCOLL,  N_PRIMCOLL,
      N_GAP_PRIMCOLL, IR_PRIMCOLL, COUNT1_PRIMCOLL,
      NUM_NODE_PRIMCOLL,INDEX_PRIMCOLL;
   $REAL
      ZMIN_PRIMCOLL, ZMAX_PRIMCOLL, ZFRONT_PRIMCOLL,
      ZCORNER_PRIMCOLL($NPOINT_PRIMCOLL),RCORNER_PRIMCOLL($NPOINT_PRIMCOLL),
      RCORNER2_PRIMCOLL($NPOINT_PRIMCOLL),
      SURPARA_PRIMCOLL($NPOINT_PRIMCOLL-1,4),
      RMIN_PRIMCOLL, RMIN2_PRIMCOLL, CRITOLD_PRIMCOLL;
   CHARACTER*1 TITLE_PRIMCOLL(60);
} "end of replacement defining common for this CM"
;
"-------------------------------------------------------------------------------
"     PRIMCOLL HOWNEAR replacement macro
"     Now just calls the HOWNEAR_PRIMCOLL subroutine
"-------------------------------------------------------------------------------
"V>PRIMCOLL_CM_HOWNEAR(#)
"V>===================
"V>
"V>{P1} the dist to the nearest boundary
;
REPLACE {PRIMCOLL_CM_HOWNEAR(#);} WITH {
CALL HOWNEAR_PRIMCOLL({P1});
}

;
REPLACE {$GEO_SHIFT_2_(#,#)} WITH {
;IF({P1}+1.0E-5< {P2}) [{P1}={P1}+1.0E-5;]  }


"V>PRIMCOLL_MACRO_1_IN(#,#,#);
"V>=============
"V> {p1} = 1, if particle is inside now, for region # change
"V>      = 0,                outside
"V> {P2} the z coordinate for dist calc
"V>      if go down, ZCORNER_PRIMCOLL(J+1)
"V>            up    ZCORNER_PRIMCOLL(J)
"V> {p3} = 1, if W(NP) > 0, used to call where_am_i
"V>      = -1,         < 0 ,  not include the w=0 case
;
REPLACE {PRIMCOLL_MACRO_1_IN(#,#,#)} WITH {
    CUT_COE=0.0;
    CUT_COE1=0.0;
    CUT_COE2=0.0;
    DIST_TMP=({P2}-Z(NP))/W(NP);
    DIRTMP = {P3};
    IF(DIST_TMP>USTEP)[STEP_UNIT=USTEP;IU_D=0;]
    ELSE[STEP_UNIT=DIST_TMP;IU_D=1;]
    RF2_PRIMCOLL=(X(NP)+STEP_UNIT*U(NP))**2
            +(Y(NP)+STEP_UNIT*V(NP))**2;
    IF(STEP_UNIT<1.0E-5)[;]
    ELSEIF(SURPARA_PRIMCOLL(J,4)>1.0E29)
    [
       IF(IU_D=1)
       [
          RF_PRIMCOLL=SQRT(RF2_PRIMCOLL);
          IF(  RF_PRIMCOLL<MAX(RCORNER_PRIMCOLL(J), RCORNER_PRIMCOLL(J+1))
              & RF_PRIMCOLL>MIN(RCORNER_PRIMCOLL(J), RCORNER_PRIMCOLL(J+1)))
          [
             $GEO_SHIFT_1_(STEP_UNIT);
             USTEP=STEP_UNIT;
             IRNEW = IRSTART_PRIMCOLL + {P1};
             RETURN;
           ]
        ]
        ELSE[ USTEP=STEP_UNIT;RETURN;]

     ]
     ELSE
     [
         RV_PRIMCOLL=RCORNER_PRIMCOLL(J)+SURPARA_PRIMCOLL(J,4)
                  *(Z(NP)+STEP_UNIT*W(NP)-ZCORNER_PRIMCOLL(J));
         RV2_PRIMCOLL=RV_PRIMCOLL**2;
         IF(RV2_PRIMCOLL<=RF2_PRIMCOLL)
         [
             RV_PRIMCOLL=RCORNER_PRIMCOLL(J)
                      +SURPARA_PRIMCOLL(J,4)*(Z(NP)-ZCORNER_PRIMCOLL(J));
             RV2_PRIMCOLL=RV_PRIMCOLL**2;
             R0DELR=X(NP)*U(NP)+Y(NP)*V(NP);
             DELRSQ=U(NP)*U(NP)+V(NP)*V(NP);
             A=DELRSQ-(SURPARA_PRIMCOLL(J,4)**2)*(W(NP)**2);
             B=R0DELR-SURPARA_PRIMCOLL(J,4)*RV_PRIMCOLL*W(NP);
             B2=B*B;
             C=R0SQ-RV2_PRIMCOLL;
             IF(A=0.0)
             [
                 IF(B~=0.0)[CUT_COE=-0.5*C/B;]
                 ELSE [ CUT_COE=-1.0E5; ]
             ]
             ELSE
             [
                 TEMP1=B2-A*C;
                 IF(TEMP1>=0.0)
                 [
                     TEMP1=-(B+SIGN(one,B)*SQRT(TEMP1) );
                     CUT_COE1=TEMP1/A;
                     CUT_COE2=C/TEMP1;
                     IF(CUT_COE1>STEP_UNITOLD & CUT_COE2>STEP_UNITOLD)
                     [CUT_COE=MIN(CUT_COE1,CUT_COE2);]
                     ELSE[ CUT_COE=MAX(CUT_COE1,CUT_COE2);]
                 ]
             ]
             IF(CUT_COE>STEP_UNITOLD & CUT_COE<STEP_UNIT)
             [
                 $GEO_SHIFT_2_(CUT_COE,STEP_UNIT);
                 USTEP=CUT_COE;
                 IRNEW = IRSTART_PRIMCOLL + {P1};
                 RETURN;
             ]
             ELSEIF( CUT_COE = STEP_UNIT & IU_D=1 )
             [
                 $GEO_SHIFT_1_(CUT_COE);
                 USTEP=CUT_COE;
                 IF(DIRTMP=1 & J+1=NUM_NODE_PRIMCOLL)
                 [  CALL WHERE_AM_I(ICM_PRIMCOLL,{P3});RETURN;]
                 ELSEIF( DIRTMP=-1 & J=1 )
                 [
                    IF(N_GAP_PRIMCOLL=0)
                    [IRNEW=IREND_PRIMCOLL; RETURN; ]
                    ELSE[CALL WHERE_AM_I(ICM_PRIMCOLL,{P3}); RETURN;]
                 ]
             ]
             ELSE[USTEP=STEP_UNIT;IRNEW =IRSTART_PRIMCOLL+{P1};RETURN;]
         ]
         ELSEIF(IU_D=0)[ USTEP=STEP_UNIT;RETURN;]
    ]
    STEP_UNITOLD=STEP_UNIT;

;}


"V>PRIMCOLL_MACRO_1_OUT(#,#,#);
"V>=============
"V> {p1} = 1, if particle is inside now, for region # change
"V>      = 0,                outside
"V> {P2} the z coordinate for dist calc
"V>      if go down, ZCORNER_PRIMCOLL(J+1)
"V>            up    ZCORNER_PRIMCOLL(J)
"V> {p3} = 1, if W(NP) > 0, used to call where_am_i
"V>      = -1,         < 0 ,  not include the w=0 case
;
REPLACE {PRIMCOLL_MACRO_1_OUT(#,#,#);} WITH {
    CUT_COE=0.0;
    CUT_COE1=0.0;
    CUT_COE2=0.0;
    DIST_TMP=({P2}-Z(NP))/W(NP);
    DIRTMP={P3};
    IF(DIST_TMP>USTEP)[STEP_UNIT=USTEP;IU_D=0;]
    ELSE[STEP_UNIT=DIST_TMP;IU_D=1;]
    IF(SURPARA_PRIMCOLL(J,4)>1.0E29)
    [
        IF(IU_D=1)
        [
            RF2_PRIMCOLL=(X(NP)+STEP_UNIT*U(NP))**2+(Y(NP)
                    +STEP_UNIT*V(NP))**2;
            RF_PRIMCOLL=SQRT(RF2_PRIMCOLL);
            IF(  RF_PRIMCOLL<MAX(RCORNER_PRIMCOLL(J), RCORNER_PRIMCOLL(J+1))
              & RF_PRIMCOLL>MIN(RCORNER_PRIMCOLL(J), RCORNER_PRIMCOLL(J+1)))
            [
                $GEO_SHIFT_1_(STEP_UNIT);
                USTEP=STEP_UNIT;
                IRNEW = IRSTART_PRIMCOLL+{P1};
                RETURN;
            ]
         ]
         ELSE[USTEP=STEP_UNIT; RETURN; ]
     ]
     ELSE
     [
        RV_PRIMCOLL=RCORNER_PRIMCOLL(J)
                +SURPARA_PRIMCOLL(J,4)*(Z(NP)-ZCORNER_PRIMCOLL(J));
        RV2_PRIMCOLL=RV_PRIMCOLL**2;
        R0DELR=X(NP)*U(NP)+Y(NP)*V(NP);
        DELRSQ=U(NP)*U(NP)+V(NP)*V(NP);
        A=DELRSQ-(SURPARA_PRIMCOLL(J,4)**2)*(W(NP)**2);
        B=R0DELR-SURPARA_PRIMCOLL(J,4)*RV_PRIMCOLL*W(NP);
        B2=B*B;
        C=R0SQ-RV2_PRIMCOLL;
        IF(A>0.0 & B>0.0 & C>0.0)
        [IF(IU_D=0)[USTEP=STEP_UNIT; RETURN; ] ]
        IF(A=0.0)
        [
           IF(B~=0.0)[CUT_COE=-0.5*C/B;]
           ELSE [ CUT_COE=-1.0E5; ]
        ]
        ELSE
        [
            TEMP1=B2-A*C;
            IF(TEMP1>=0.0)
            [
                TEMP1=-(B+SIGN(one,B)*SQRT(TEMP1) );
                CUT_COE1=TEMP1/A;
                CUT_COE2=C/TEMP1;
                IF(CUT_COE1>STEP_UNITOLD & CUT_COE2>STEP_UNITOLD)
                [CUT_COE=MIN(CUT_COE1,CUT_COE2);]
                ELSE[ CUT_COE=MAX(CUT_COE1,CUT_COE2);]
            ]
        ]
        IF(CUT_COE>STEP_UNITOLD & CUT_COE<STEP_UNIT)
        [
            $GEO_SHIFT_2_(CUT_COE,STEP_UNIT);
            USTEP=CUT_COE;
            IRNEW = IRSTART_PRIMCOLL+{P1};
            RETURN;
        ]
        ELSEIF( CUT_COE = STEP_UNIT & IU_D=1 )
        [
            $GEO_SHIFT_1_(CUT_COE);
            USTEP=CUT_COE;
            IF(DIRTMP=1 & J+1=NUM_NODE_PRIMCOLL )
            [ CALL WHERE_AM_I(ICM_PRIMCOLL,{P3}); RETURN;  ]
            ELSEIF( DIRTMP=-1 & J=1 )
            [
                IF(N_GAP_PRIMCOLL=1)
                [IRNEW=IREND_PRIMCOLL; RETURN; ]
                ELSE[CALL WHERE_AM_I(ICM_PRIMCOLL,{P3}); RETURN;]
            ]
        ]
        ELSEIF(CUT_COE = STEP_UNIT & IU_D=0 )
        [ IRNEW=IRSTART_PRIMCOLL+{P1};USTEP=STEP_UNIT; RETURN;]
        ELSEIF(IU_D=0)[USTEP=STEP_UNIT;RETURN;]
    ]
    STEP_UNITOLD=STEP_UNIT;
;}
"End of CONS3R_macros.mortran"
%C80
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc component module macros: photon flattening filter           "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          Blake Walters, 1995                                       "
"                                                                             "
"  Contributors:    Dave Rogers                                               "
"                   Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  The contributors named above are only those who could be identified from   "
"  this file's revision history.                                              "
"                                                                             "
"  This code was originally part of the BEAM code system for Monte Carlo      "
"  simulation of radiotherapy treatments units. It was developed at the       "
"  National Research Council of Canada as part of the OMEGA collaborative     "
"  research project with the University of Wisconsin. The system was          "
"  originally described in:                                                   "
"                                                                             "
"  BEAM: A Monte Carlo code to simulate radiotherapy treatment units,         "
"  DWO Rogers, BA Faddegon, GX Ding, C-M Ma, J Wei and TR Mackie,             "
"  Medical Physics 22, 503-524 (1995).                                        "
"                                                                             "
"  BEAM User Manual                                                           "
"  DWO Rogers, C-M Ma, B Walters, GX Ding, D Sheikh-Bagheri and G Zhang,      "
"  NRC Report PIRS-509A (rev D)                                               "
"                                                                             "
"  As well as the authors of this paper and report, Joanne Treurniet of NRC   "
"  made significant contributions to the code system, in particular the GUIs  "
"  and EGS_Windows. Mark Holmes, Brian Geiser and Paul Reckwerdt of Wisconsin "
"  played important roles in the overall OMEGA project within which the BEAM  "
"  code system was developed.                                                 "
"                                                                             "
"  There have been major upgrades in the BEAM code starting in 2000 which     "
"  have been heavily supported by Iwan Kawrakow, most notably: the port to    "
"  EGSnrc, the inclusion of history-by-history statistics and the development "
"  of the directional bremsstrahlung splitting variance reduction technique.  "
"                                                                             "
"#############################################################################"


"-------------------------------------------------------------------------------
"     CON miscellaneous replacement macros
"-------------------------------------------------------------------------------
REPLACE {$MAX_N_FLATTENF} WITH {80}
REPLACE {$MAX_N_SC_FLATTENF} WITH {80}
"       ==================="
;
"-------------------------------------------------------------------------------
"     FLATFILT component module common
"-------------------------------------------------------------------------------
"
"V>COMMON/CM_FLATTENF/
"V>================
"V>ICM_FLATTENF = index of CM, set as ICM in INPUT__$flatfilt and never re-set
"V>IRSTART_FLATTENF    = first region number for this CM
"V>IREND_FLATTENF      = last region number for this CM
"V>N_FLATTENF          = number of regions in CM
"V>TITLE_FLATTENF      = title of CM
"V>ISCM_NO_FLATTENF    = number of layers in the CM
"V>ISSCM_NO_FLATTENF($MAX_N_FLATTENF) = number of coaxial cones in each layer
"V>ZMIN_FLATTENF($MAX_N_FLATTENF)      = Front of each layer
"V>ZMAX_FLATTENF       = back of each layer
"V>ZFRONT_FLATTENF     = Upstream Z boundary of this CM
"V>RTOP_FLATTENF       = radius at front
"V>RBOT_FLATTENF       = radius at back
"V>COSA_FLATTENF       = cos of the cone
"V>IR_FLATTENF         = local region number
;
REPLACE {;COMIN/CM_FLATTENF/;} WITH {
   ;COMMON/CM_FLATTENF/
      ZMIN_FLATTENF,
      ZMAX_FLATTENF,
      RTOP_FLATTENF,
      RBOT_FLATTENF,
      COSA_FLATTENF,
      ZFRONT_FLATTENF,
      TITLE_FLATTENF,
      ICM_FLATTENF,
      IRSTART_FLATTENF,
      IREND_FLATTENF,
      N_FLATTENF,
      N_GAP_FLATTENF,
      ISCM_NO_FLATTENF,
      ISSCM_NO_FLATTENF,
      IR_FLATTENF,
      ISCM_FLATTENF,
      ISCM_FLATTENF_C,
      IISSC_FLATTENF,
      IISSC_FLATTENF_C;
   INTEGER
      ICM_FLATTENF,
      IRSTART_FLATTENF,
      IREND_FLATTENF,
      N_FLATTENF,
      N_GAP_FLATTENF,
      ISCM_FLATTENF,
      ISCM_FLATTENF_C,
      IISSC_FLATTENF,
      IISSC_FLATTENF_C,
      ISCM_NO_FLATTENF,
      ISSCM_NO_FLATTENF($MAX_N_SC_FLATTENF),
      IR_FLATTENF;
   $REAL
      ZFRONT_FLATTENF,
      RTOP_FLATTENF($MAX_N_FLATTENF,$MAX_N_SC_FLATTENF),
      RBOT_FLATTENF($MAX_N_FLATTENF,$MAX_N_SC_FLATTENF),
      COSA_FLATTENF($MAX_N_FLATTENF,$MAX_N_SC_FLATTENF,2);
   REAL*8
      ZMIN_FLATTENF($MAX_N_FLATTENF),ZMAX_FLATTENF($MAX_N_FLATTENF);
      "above needed for cases of very thin slabs P Selvam 2005"
   CHARACTER*1 TITLE_FLATTENF(60);
   } "end of replacement defining common for this CM"
;
;
"-------------------------------------------------------------------------------
"     FLAT HOWNEAR replacement macro
" Now just calls HOWNEAR_FLATTENF subroutine
"-------------------------------------------------------------------------------
"V>$FLAT_CM_HOWNEAR(#)
"V>===================
"V>
;
REPLACE {FLATTENF_CM_HOWNEAR(#);} WITH {
CALL HOWNEAR_FLATTENF({P1});
}
;
;
"V>FLATTENF_GET_SQXY(#,#);
"V>=============
"V>
;
REPLACE {FLATTENF_GET_SQXY(#,#);} WITH {
 ;XF_FLATTENF = X(NP)+{P1}*U(NP);
 YF_FLATTENF = Y(NP)+{P1}*V(NP);
 {P2} = XF_FLATTENF**2 + YF_FLATTENF**2;
}

"p outside

REPLACE {FLATTENF_GET_DICO_OU(#,#);} WITH {
;
ALO_FLATTENF = (RBOT_FLATTENF({P1},{P2}-1)
                - RTOP_FLATTENF({P1},{P2}-1))/
                (ZMAX_FLATTENF({P1}) - ZMIN_FLATTENF({P1}));
BLO_FLATTENF = RTOP_FLATTENF({P1},{P2}-1) - $BDY_TOL
                - ZMIN_FLATTENF({P1})*ALO_FLATTENF;
IF(X(NP)**2+Y(NP)**2 -(Z(NP)*ALO_FLATTENF+
   BLO_FLATTENF)**2 < 0.0)[
   "inside cone, change region and return"
   IF(SQRT(X(NP)**2+Y(NP)**2) -Z(NP)*ALO_FLATTENF-
   BLO_FLATTENF < -$BDY_TOL)[
      I_outside=I_outside+1;
      IF(I_outside>1000)[
         OUTPUT {P2},{P1};
         (/' ***WARNING in cone ',I4,' of layer ',I4,' in FLATTENF'/
         ' Particle radial position < radius of cone corresponding to its'/
         ' region no.'/);
         I_outside=0;
      ]
   ]
   IRNEW=IRL-1;
   USTEP=0.0;
   RETURN;
]
ELSE[
   I_outside=0;
]
AUP_FLATTENF = U(NP)**2+V(NP)**2 - W(NP)*W(NP)*ALO_FLATTENF**2;
BUP_FLATTENF = U(NP)*X(NP)+V(NP)*Y(NP)
              - ALO_FLATTENF**2*W(NP)*Z(NP)
              - ALO_FLATTENF*BLO_FLATTENF*W(NP);
CUP_FLATTENF = X(NP)**2+Y(NP)**2
              - (Z(NP)*ALO_FLATTENF + BLO_FLATTENF)**2;
DUP_FLATTENF = BUP_FLATTENF**2 - AUP_FLATTENF*CUP_FLATTENF;
IF(DUP_FLATTENF <= 0.0 | AUP_FLATTENF = 0.0 ) [DIST_COU = 1E5;]
ELSE[
   TQ_FLATTENF = - BUP_FLATTENF - SIGN(one,BUP_FLATTENF)*
                    SQRT(DUP_FLATTENF);
   T1_FLATTENF = TQ_FLATTENF/AUP_FLATTENF;
   T2_FLATTENF = CUP_FLATTENF/TQ_FLATTENF;
   DIST_COU = MIN(T1_FLATTENF, T2_FLATTENF);
   IF(DIST_COU < 0.0) [
      DIST_COU = MAX(T1_FLATTENF, T2_FLATTENF);
   ]
   IF(DIST_COU <= 0.0) [
       DIST_COU = 1E5;
   ]
   ELSEIF(DIST_COU < $BDY_TOL)[
       DIST_COU = $BDY_TOL;
   ]
]

IF(DIST_COU < DIST)[
   DIST = DIST_COU;
   IRNEW_FLATTENF  = IRL - 1;
]
}

"p inside

"V>FLATTENF_GET_DICO_IN;
"V>=============
"V>
;
REPLACE {FLATTENF_GET_DICO_IN(#,#);} WITH {
ALO_FLATTENF = (RBOT_FLATTENF({P1},{P2}) - RTOP_FLATTENF({P1},{P2}))/
                (ZMAX_FLATTENF({P1}) - ZMIN_FLATTENF({P1}));
BLO_FLATTENF = RTOP_FLATTENF({P1},{P2}) + $BDY_TOL
                - ZMIN_FLATTENF({P1})*ALO_FLATTENF;
IF(X(NP)**2+Y(NP)**2 -(Z(NP)*ALO_FLATTENF+
   BLO_FLATTENF)**2 > 0.0)[
   "outside cone, change region and return"
   IF(SQRT(X(NP)**2+Y(NP)**2) -Z(NP)*ALO_FLATTENF-
   BLO_FLATTENF > $BDY_TOL)[
      I_inside=I_inside+1;
      IF(I_inside>1000)[
         OUTPUT {P2},{P1};
         (/' ***WARNING in cone ',I4,' of layer ',I4,' in FLATTENF'/
         ' Particle radial position > radius of cone corresponding to its'/
         ' region no.'/);
         I_inside=0;
      ]
   ]
   IRNEW=IRL+1;
   USTEP=0.0;
   RETURN;
]
ELSE[
   I_inside=0;
]
AUP_FLATTENF = U(NP)**2 + V(NP)**2 - W(NP)**2*ALO_FLATTENF**2;
BUP_FLATTENF = U(NP)*X(NP)+V(NP)*Y(NP)
           - ALO_FLATTENF**2*W(NP)*Z(NP)
           - ALO_FLATTENF*BLO_FLATTENF*W(NP);
CUP_FLATTENF = X(NP)**2+Y(NP)**2
           -(Z(NP)*ALO_FLATTENF+BLO_FLATTENF)**2;
DUP_FLATTENF = BUP_FLATTENF*BUP_FLATTENF - AUP_FLATTENF*CUP_FLATTENF;
IF(AUP_FLATTENF ~= 0.0 & DUP_FLATTENF >= 0.0)[
   TQ_FLATTENF = -BUP_FLATTENF - SIGN(one,BUP_FLATTENF)*SQRT(DUP_FLATTENF);
   T1_FLATTENF = TQ_FLATTENF/AUP_FLATTENF;
   T2_FLATTENF = CUP_FLATTENF/TQ_FLATTENF;
   IF(T1_FLATTENF > 0.0 &
      T2_FLATTENF > 0.0 )[
      DIST_CIN = MIN(T1_FLATTENF, T2_FLATTENF);
   ]
   ELSE[
      DIST_CIN = MAX(T1_FLATTENF, T2_FLATTENF);
   ]
]
ELSE[
   DIST_CIN = 1E5;
  " OUTPUT AUP_FLATTENF,DUP_FLATTENF;"
  "  (' No hit! in FLATTENF_IN_HIT, AUP,DUP =',2F11.5/);"
]
IF(DIST_CIN <= 0.) [
     DIST_CIN = 1E5;
]
ELSEIF(DIST_CIN < $BDY_TOL)[
       DIST_CIN = $BDY_TOL;
]

IF(DIST_CIN < DIST)[
   DIST = DIST_CIN;
   IRNEW_FLATTENF  = IRL + 1;
]

}
;

REPLACE {FLATTENF_FIND_I_II(#,#);} WITH {
   I1 = 0;
   I2 = 0;
   DO I = 1, ISCM_NO_FLATTENF [ " find local region index"
      I2 = I2 + ISSCM_NO_FLATTENF(I) + 1;
      IF(IR_FLATTENF <= I2)[
         ISCM_FLATTENF = I;
         IF(ISCM_FLATTENF > 1)[
            DO II = 1, ISCM_FLATTENF - 1[
               I1 = I1 + ISSCM_NO_FLATTENF(II) + 1;
            ]
         ]
         IISSC_FLATTENF = IR_FLATTENF - I1;
         EXIT;
      ]
   ]

IF(IR_FLATTENF = N_FLATTENF + 1 & Z(NP) > ZMIN_FLATTENF(1))[
   IDISC = 1;
   RETURN;
]

IF(IISSC_FLATTENF_C ~= IISSC_FLATTENF | ISCM_FLATTENF_C ~= ISCM_FLATTENF)[
   IISSC_FLATTENF = IISSC_FLATTENF_C;
   ISCM_FLATTENF = ISCM_FLATTENF_C;
]
}


REPLACE {FLATTENF_NEGTIVE_USTEP;} WITH {;
IF(USTEP < -$BDY_TOL)[
   OUTPUT IR(NP);(' check negtive IR(NP)=  ', I8);
   OUTPUT ISCM_FLATTENF,IISSC_FLATTENF;
         ('I,II ', 4I8);
   OUTPUT X(NP),Y(NP),Z(NP),U(NP),V(NP),
          W(NP),SQRT(X(NP)**2+Y(NP)**2),USTEP,DIST;
         ('x,y,z,u,v,w, r,ustep,dist= ',9F12.4);
]
}

REPLACE {FLATTENF_CHECK_OUTSIDE;} WITH {;
IF( Z(NP) > ZMAX_FLATTENF(ISCM_NO_FLATTENF) + $BDY_TOL & W(NP) > 0 )[
  Z(NP) = ZMAX_FLATTENF(ISCM_NO_FLATTENF);
  CALL WHERE_AM_I(ICM_FLATTENF,1);
  RETURN;
]
IF( Z(NP) > ZMAX_FLATTENF(ISCM_NO_FLATTENF) + $BDY_TOL & W(NP) < 0 )[
  Z(NP) = ZMAX_FLATTENF(ISCM_NO_FLATTENF);
]
}

"p outside

REPLACE {FLATTENF_GET_DICO_OU_WLTZ(#,#);} WITH {
;
ALO_FLATTENF = (RBOT_FLATTENF({P1},{P2}-1)
                - RTOP_FLATTENF({P1},{P2}-1))/
                (ZMAX_FLATTENF({P1}) - ZMIN_FLATTENF({P1}));
BLO_FLATTENF = RTOP_FLATTENF({P1},{P2}-1) - $BDY_TOL
                - ZMIN_FLATTENF({P1})*ALO_FLATTENF;
IF(X(NP)**2+Y(NP)**2 -(Z(NP)*ALO_FLATTENF+
   BLO_FLATTENF)**2 < 0.0)[
   "inside cone, change region and return"
   IF(SQRT(X(NP)**2+Y(NP)**2) -Z(NP)*ALO_FLATTENF-
   BLO_FLATTENF < -$BDY_TOL)[
      I_outside=I_outside+1;
      IF(I_outside>1000)[
         OUTPUT {P2},{P1};
         (/' ***WARNING in cone ',I4,' of layer ',I4,' in FLATTENF'/
         ' Particle radial position < radius of cone corresponding to its'/
         ' region no.'/);
         I_outside=0;
      ]
   ]
   IRNEW=IRL-1;
   USTEP=0.0;
   RETURN;
]
ELSE[
   I_outside=0;
]
AUP_FLATTENF = U(NP)**2+V(NP)**2 - W(NP)*W(NP)*ALO_FLATTENF**2;
BUP_FLATTENF = U(NP)*X(NP)+V(NP)*Y(NP)
              - ALO_FLATTENF**2*W(NP)*Z(NP)
              - ALO_FLATTENF*BLO_FLATTENF*W(NP);
CUP_FLATTENF = X(NP)**2+Y(NP)**2
              - (Z(NP)*ALO_FLATTENF + BLO_FLATTENF)**2;
DUP_FLATTENF = BUP_FLATTENF**2 - AUP_FLATTENF*CUP_FLATTENF;
IF(DUP_FLATTENF <= 0.0 | AUP_FLATTENF = 0.0 ) [DIST_COU = 1E5;]
ELSE[
   TQ_FLATTENF = - BUP_FLATTENF - SIGN(one,BUP_FLATTENF)*
                    SQRT(DUP_FLATTENF);
   T1_FLATTENF = TQ_FLATTENF/AUP_FLATTENF;
   T2_FLATTENF = CUP_FLATTENF/TQ_FLATTENF;
   DIST_COU = MIN(T1_FLATTENF, T2_FLATTENF);
   IF(DIST_COU < 0.0) [
      DIST_COU = MAX(T1_FLATTENF, T2_FLATTENF);
   ]
   IF(DIST_COU <= 0.0) [
       DIST_COU = 1E5;
   ]
   ELSEIF(DIST_COU < $BDY_TOL)[
       DIST_COU = $BDY_TOL;
   ]
]
IF(DIST_COU < DIST)[
   DIST = DIST_COU;
   IRNEW_FLATTENF  = IRL - 1;
]
}



REPLACE {FLATTENF_CHECH_DIST1;} WITH {;
IF(DIST < -$BDY_TOL)[
   OUTPUT IR(NP);(' check dist1 IR(NP)=  ', I8);
   OUTPUT ISCM_FLATTENF,IISSC_FLATTENF;
         ('I,II ', 4I8);
   OUTPUT X(NP),Y(NP),Z(NP),U(NP),V(NP),
          W(NP),SQRT(X(NP)**2+Y(NP)**2),DIST;
         ('x,y,z,u,v,w, r,dist= ',8F12.4);

]
}
REPLACE {FLATTENF_CHECH_DIST2;} WITH {;
IF(DIST < -$BDY_TOL)[
   OUTPUT IR(NP);(' check dist2 IR(NP)=  ', I8);
   OUTPUT ISCM_FLATTENF,IISSC_FLATTENF;
         ('I,II ', 4I8);
   OUTPUT X(NP),Y(NP),Z(NP),U(NP),V(NP),
          W(NP),SQRT(X(NP)**2+Y(NP)**2),DIST;
         ('x,y,z,u,v,w, r= ',8F12.4);
]
}

REPLACE {FLATTENF_CHECH_DIST3;} WITH {;
IF(DIST < -$BDY_TOL)[
   OUTPUT IR(NP);(' check dist3 IR(NP)=  ', I8);
   OUTPUT ISCM_FLATTENF,IISSC_FLATTENF;
         ('I,II ', 4I8);
   OUTPUT X(NP),Y(NP),Z(NP),U(NP),V(NP),
          W(NP),SQRT(X(NP)**2+Y(NP)**2),DIST;
         ('x,y,z,u,v,w, r= ',8F12.4);
]
}
"End of FLATFILT_macros.mortran"
%C80
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc component module macros: parallel plate monitor chamber     "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          Blake Walters, 1995                                       "
"                                                                             "
"  Contributors:    Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  The contributors named above are only those who could be identified from   "
"  this file's revision history.                                              "
"                                                                             "
"  This code was originally part of the BEAM code system for Monte Carlo      "
"  simulation of radiotherapy treatments units. It was developed at the       "
"  National Research Council of Canada as part of the OMEGA collaborative     "
"  research project with the University of Wisconsin. The system was          "
"  originally described in:                                                   "
"                                                                             "
"  BEAM: A Monte Carlo code to simulate radiotherapy treatment units,         "
"  DWO Rogers, BA Faddegon, GX Ding, C-M Ma, J Wei and TR Mackie,             "
"  Medical Physics 22, 503-524 (1995).                                        "
"                                                                             "
"  BEAM User Manual                                                           "
"  DWO Rogers, C-M Ma, B Walters, GX Ding, D Sheikh-Bagheri and G Zhang,      "
"  NRC Report PIRS-509A (rev D)                                               "
"                                                                             "
"  As well as the authors of this paper and report, Joanne Treurniet of NRC   "
"  made significant contributions to the code system, in particular the GUIs  "
"  and EGS_Windows. Mark Holmes, Brian Geiser and Paul Reckwerdt of Wisconsin "
"  played important roles in the overall OMEGA project within which the BEAM  "
"  code system was developed.                                                 "
"                                                                             "
"  There have been major upgrades in the BEAM code starting in 2000 which     "
"  have been heavily supported by Iwan Kawrakow, most notably: the port to    "
"  EGSnrc, the inclusion of history-by-history statistics and the development "
"  of the directional bremsstrahlung splitting variance reduction technique.  "
"                                                                             "
"#############################################################################"


%Q1
%C80
!INDENT F4;
!INDENT M4;
;
"-------------------------------------------------------------------------------
"     CHAMBER miscellaneous replacement macros
"-------------------------------------------------------------------------------
"
;
REPLACE {$MAX_N_CHAMBER} WITH {200}
"        ==========="
;
"-------------------------------------------------------------------------------
"     CHAMBER component module common
"-------------------------------------------------------------------------------
"
"V>COMMON/CM_CHAMBER/
"V>================
"V>ICM_CHAMBER        = index of CM, set as ICM in INPUT_$tag and never re-set
"V>IRSTART_CHAMBER    = first region number for this CM
"V>IREND_CHAMBER      = last region number for this CM
"V>N_CHAMBER          = number of regions in CM
"V>TITLE_CHAMBER      = title of CM
"V>ZFRONT_CHAMBER     = Front of CM (air)
"V>ZBACK_CHAMBER      = Front of CM (air)
"V>ZMIN_CHAMBER       = Upstream Z boundary of first cylinder slab
"V>ZMAX_CHAMBER       = Downstream Z boundary of this CM
"V>Z_CHAMBER(I)
"V>RCYS_CHAMBER(I,3)     = radius of a cylindeRS
"V>RCYS2_CHAMBER(I,3)    = squre of radius of a cylinder
"V>IR_CHAMBER         = local region number
;
REPLACE {COMIN/CM_CHAMBER/;} WITH {
   COMMON/CM_CHAMBER/
      Z_CHAMBER,
      ZFRONT_CHAMBER,
      ZBACK_CHAMBER,
      ZMIN_CHAMBER,
      ZMAX_CHAMBER,
      RCYS_CHAMBER,
      RCYS2_CHAMBER,
      TITLE_CHAMBER,
      ICM_CHAMBER,IRSTART_CHAMBER,IREND_CHAMBER,
      N_CHAMBER,N_GAP_CHAMBER,
      N_CHM_CHAMBER, N_TOP_CHAMBER,
      N_BOT_CHAMBER,
      IR_CHAMBER;
   INTEGER
      ICM_CHAMBER,IRSTART_CHAMBER,IREND_CHAMBER,
      N_CHAMBER ,N_GAP_CHAMBER,
      N_CHM_CHAMBER, N_TOP_CHAMBER,
      N_BOT_CHAMBER, IR_CHAMBER;
   $REAL
      ZFRONT_CHAMBER,
      ZBACK_CHAMBER,
      ZMIN_CHAMBER,
      ZMAX_CHAMBER,
      RCYS_CHAMBER($MAX_N_CHAMBER,3),
      RCYS2_CHAMBER($MAX_N_CHAMBER,3);
   REAL*8 Z_CHAMBER(1:$MAX_N_CHAMBER+1);  "P Selvam change"
   CHARACTER*1 TITLE_CHAMBER(60);
} "end of replacement defining common for this CM"
;
;
"-------------------------------------------------------------------------------
"     CHAMBER HOWNEAR replacement macro
"-------------------------------------------------------------------------------
"V>CHAMBER_CM_HOWNEAR(#)
"V>===================
"V>
;
REPLACE {CHAMBER_CM_HOWNEAR(#);} WITH  { CALL HOWNEAR_CHAMBER({P1}); }
;
"End of CHAMBER_macros.mortran"
%C80
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc component module macros: mirror plane                       "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          Blake Walters, 1995                                       "
"                                                                             "
"  Contributors:    Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  This code originally evolved from the MIRR component module written by     "
"  George Ding, starting in 1992, and subsequently edited by Charlie Ma.      "
"                                                                             "
"  The contributors named above are only those who could be identified from   "
"  this file's revision history.                                              "
"                                                                             "
"  This code was originally part of the BEAM code system for Monte Carlo      "
"  simulation of radiotherapy treatments units. It was developed at the       "
"  National Research Council of Canada as part of the OMEGA collaborative     "
"  research project with the University of Wisconsin. The system was          "
"  originally described in:                                                   "
"                                                                             "
"  BEAM: A Monte Carlo code to simulate radiotherapy treatment units,         "
"  DWO Rogers, BA Faddegon, GX Ding, C-M Ma, J Wei and TR Mackie,             "
"  Medical Physics 22, 503-524 (1995).                                        "
"                                                                             "
"  BEAM User Manual                                                           "
"  DWO Rogers, C-M Ma, B Walters, GX Ding, D Sheikh-Bagheri and G Zhang,      "
"  NRC Report PIRS-509A (rev D)                                               "
"                                                                             "
"  As well as the authors of this paper and report, Joanne Treurniet of NRC   "
"  made significant contributions to the code system, in particular the GUIs  "
"  and EGS_Windows. Mark Holmes, Brian Geiser and Paul Reckwerdt of Wisconsin "
"  played important roles in the overall OMEGA project within which the BEAM  "
"  code system was developed.                                                 "
"                                                                             "
"  There have been major upgrades in the BEAM code starting in 2000 which     "
"  have been heavily supported by Iwan Kawrakow, most notably: the port to    "
"  EGSnrc, the inclusion of history-by-history statistics and the development "
"  of the directional bremsstrahlung splitting variance reduction technique.  "
"                                                                             "
"#############################################################################"


"-------------------------------------------------------------------------------
"     MIRROR miscellaneous replacement macros
"-------------------------------------------------------------------------------
REPLACE {$MAX_N_MIRROR} WITH {10}
"
"-------------------------------------------------------------------------------
"     MIRROR component module common
"-------------------------------------------------------------------------------
"V>COMMON/CM_MIRROR/
"V>================
"V>ICM_MIRROR        = index of CM, set as ICM in INPUT_$tag and never re-set
"V>IRSTART_MIRROR    = first region number for this CM
"V>IREND_MIRROR      = last region number for this CM
"V>N_MIRROR          = number of slabs of the mirror
"V>TITLE_MIRROR      = title of CM
"V>ZFRONT_MIRROR     = Front of CM (air)
"V>ZBACK_MIRROR      = Back of CM (air)
"V>A_MIRROR          = a in X = a*Z + b
"V>BMAX_MIRROR       = b in X = a*Z + b
"V>BMIN_MIRROR       = b in X = a*Z + b
"v>DTHICK_MIRROR($MAX_N_MIRROR)  thickness of mirror layers in this CM
"V>IR_MIRROR         = local region number
;
REPLACE {;COMIN/CM_MIRROR/;} WITH {
   ;COMMON/CM_MIRROR/ ICM_MIRROR,
      IRSTART_MIRROR,IREND_MIRROR,   N_MIRROR,N_GAP_MIRROR,
      IR_MIRROR,
      ZFRONT_MIRROR,  ZMIN_MIRROR,
      ZBACK_MIRROR,  A_MIRROR,       BMIN_MIRROR,
      BMAX_MIRROR,   BMINT_MIRROR,   BMAXT_MIRROR,
      XFMIN_MIRROR,  XFMAX_MIRROR,   XBMIN_MIRROR,
      XBMAX_MIRROR,  XFMINT_MIRROR,  XFMAXT_MIRROR,
      XBMINT_MIRROR, XBMAXT_MIRROR,  DTHICK_MIRROR,
      ZTHICK_MIRROR,
      TITLE_MIRROR;
   INTEGER ICM_MIRROR,IRSTART_MIRROR,IREND_MIRROR,
           N_MIRROR,N_GAP_MIRROR,IR_MIRROR;
   $REAL
      ZFRONT_MIRROR,   ZMIN_MIRROR,  ZBACK_MIRROR,
      A_MIRROR,        BMIN_MIRROR($MAX_N_MIRROR),
      BMAX_MIRROR($MAX_N_MIRROR), BMINT_MIRROR($MAX_N_MIRROR),
      BMAXT_MIRROR($MAX_N_MIRROR), XFMIN_MIRROR($MAX_N_MIRROR),
      XFMAX_MIRROR($MAX_N_MIRROR), XBMIN_MIRROR($MAX_N_MIRROR),
      XBMAX_MIRROR($MAX_N_MIRROR), XFMINT_MIRROR($MAX_N_MIRROR),
      XFMAXT_MIRROR($MAX_N_MIRROR), XBMINT_MIRROR($MAX_N_MIRROR),
      XBMAXT_MIRROR($MAX_N_MIRROR),DTHICK_MIRROR($MAX_N_MIRROR),
      ZTHICK_MIRROR;
   CHARACTER*1 TITLE_MIRROR(60);
} "end of replacement defining common for this CM"
;
"-------------------------------------------------------------------------------
"     MIRROR HOWNEAR replacement macro
"  Now just calls HOWNEAR_MIRROR subroutine
"-------------------------------------------------------------------------------
"V>MIRROR_CM_HOWNEAR(#)
"V>===================
"V>
;
REPLACE {MIRROR_CM_HOWNEAR(#);} WITH  {
CALL HOWNEAR_MIRROR({P1});
}
"end of MIRROR_macros.mortran"
%C80
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc component module macros: set of paired bars                 "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          George Ding, 1992                                         "
"                                                                             "
"  Contributors:    Blake Walters                                             "
"                   Dave Rogers                                               "
"                   Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  The contributors named above are only those who could be identified from   "
"  this file's revision history.                                              "
"                                                                             "
"  This code was originally part of the BEAM code system for Monte Carlo      "
"  simulation of radiotherapy treatments units. It was developed at the       "
"  National Research Council of Canada as part of the OMEGA collaborative     "
"  research project with the University of Wisconsin. The system was          "
"  originally described in:                                                   "
"                                                                             "
"  BEAM: A Monte Carlo code to simulate radiotherapy treatment units,         "
"  DWO Rogers, BA Faddegon, GX Ding, C-M Ma, J Wei and TR Mackie,             "
"  Medical Physics 22, 503-524 (1995).                                        "
"                                                                             "
"  BEAM User Manual                                                           "
"  DWO Rogers, C-M Ma, B Walters, GX Ding, D Sheikh-Bagheri and G Zhang,      "
"  NRC Report PIRS-509A (rev D)                                               "
"                                                                             "
"  As well as the authors of this paper and report, Joanne Treurniet of NRC   "
"  made significant contributions to the code system, in particular the GUIs  "
"  and EGS_Windows. Mark Holmes, Brian Geiser and Paul Reckwerdt of Wisconsin "
"  played important roles in the overall OMEGA project within which the BEAM  "
"  code system was developed.                                                 "
"                                                                             "
"  There have been major upgrades in the BEAM code starting in 2000 which     "
"  have been heavily supported by Iwan Kawrakow, most notably: the port to    "
"  EGSnrc, the inclusion of history-by-history statistics and the development "
"  of the directional bremsstrahlung splitting variance reduction technique.  "
"                                                                             "
"#############################################################################"


"-------------------------------------------------------------------------------
"     JAWS miscellaneous replacement macros
"-------------------------------------------------------------------------------
REPLACE {$MAX_N_SECJAWS} WITH {12}
"       ==================="
;
"-------------------------------------------------------------------------------
"     SECJAWS (JAWS) component module common                  ""toc:
"-------------------------------------------------------------------------------
"
"V>COMMON/CM_SECJAWS/
"V>================
"V>ICM_SECJAWS      = CM index, set as ICM in INPUT_SECJAWS - never re-set
"V>IRSTART_SECJAWS  = first region number for this CM
"V>IREND_SECJAWS    = last region number for this CM
"V>N_SECJAWS        = number of regions in CM
"V>ISCM_MAX_SECJAWS = number of pired bars in CM
"V>ISCM_SECJAWS     = index of pired bars in CM
"V>TITLE_SECJAWS    = title of CM
"V>XY_CHOICE_SECJAWS = chose X or Y oringtation of the bar
"V>ZBACK_SECJAWS    = Back of CM
"V>ZFRONT_SECJAWS   = Front of CM
"V>ZMIN_SECJAWS(I)  = Zmin of a paired bar
"V>ZMAX_SECJAWS(I)  = Zmax of a paired bar
"V>XFP_SECJAWS(I)   = Front of positive bar in this ISCM (X or Y)
"V>XFN_SECJAWS(I)   = Front of negative bar in this ISCM (X or Y)
"V>XBP_SECJAWS(I)   = Back of positive bar in this ISCM (X or Y)
"V>XBN_SECJAWS(I)   = Back of negative bar in this ISCM (X or Y)
"V>XFPT_SECJAWS(I,2)= Front of positive bar in this ISCM (X or Y)
"V>XFNT_SECJAWS(I,2)= Front of negative bar in this ISCM (X or Y)
"V>XBPT_SECJAWS(I,2)= Back of positive bar in this ISCM (X or Y)
"V>XBNT_SECJAWS(I,2)= Back of negative bar in this ISCM (X or Y)
"V>APO_SECJAWS(I)   = Slope of positive bar in this ISCM (X or Y)
"V>ANE_SECJAWS(I)   = Slope of negative bar in this ISCM (X or Y)
"V>BPO_SECJAWS(I)   = Constant  b of positive bar in equation x = a*z + b
"V>BNE_SECJAWS(I)   = Constant  b of negative bar in equation x = a*z + b
"V>BPOT_SECJAWS(I,2)= Constant  b of positive bar in equation x = a*z + b
"V>BNET_SECJAWS(I,2)= Constant  b of negative bar in equation x = a*z + b
"V>IXY_CHOICE_SECJAWS(ISCM) = index for x or y bar direction
"V>COSP_SECJAWS(I)  = cos of positive bar in this ISCM
"V>COSN_SECJAWS(I)  = cos of negative bar in this ISCM
"V>IR_SECJAWS       = local region number
"V>ISCM_SECJAWS     = local sub-component region number
"V>XY_SECJAWS       = X(NP) or Y(NP)
"V>UV_SECJAWS       = U(NP) or V(NP)
;
REPLACE {;COMIN/CM_SECJAWS/;} WITH {
   ;COMMON/CM_SECJAWS/
      IXY_CHOICE_SECJAWS,
      APO_SECJAWS, ANE_SECJAWS,
      XFP_SECJAWS,XFPT_SECJAWS,   XFN_SECJAWS,XFNT_SECJAWS,
      XBP_SECJAWS,XBPT_SECJAWS,   XBN_SECJAWS,XBNT_SECJAWS,
      BPO_SECJAWS,BPOT_SECJAWS,   BNE_SECJAWS,BNET_SECJAWS,
      ZMIN_SECJAWS, ZMAX_SECJAWS, ZBACK_SECJAWS,ZFRONT_SECJAWS,
      COSP_SECJAWS,COSN_SECJAWS,XY_SECJAWS,UV_SECJAWS,
      ICM_SECJAWS,
      IRSTART_SECJAWS,  IREND_SECJAWS,  N_SECJAWS,  ISCM_MAX_SECJAWS,
      IR_SECJAWS, ISCM_SECJAWS,
      TITLE_SECJAWS;
   INTEGER
      ICM_SECJAWS,IRSTART_SECJAWS,IREND_SECJAWS,
      N_SECJAWS,ISCM_MAX_SECJAWS, IR_SECJAWS,
      IXY_CHOICE_SECJAWS($MAX_N_SECJAWS), ISCM_SECJAWS;
   $REAL
      ZMIN_SECJAWS($MAX_N_SECJAWS),  ZMAX_SECJAWS($MAX_N_SECJAWS),
      ZBACK_SECJAWS, ZFRONT_SECJAWS,     XFP_SECJAWS($MAX_N_SECJAWS),
      XFN_SECJAWS($MAX_N_SECJAWS),   XBP_SECJAWS($MAX_N_SECJAWS),
      XBN_SECJAWS($MAX_N_SECJAWS),   XFPT_SECJAWS($MAX_N_SECJAWS,2),
      XFNT_SECJAWS($MAX_N_SECJAWS,2),XBPT_SECJAWS($MAX_N_SECJAWS,2),
      XBNT_SECJAWS($MAX_N_SECJAWS,2),APO_SECJAWS($MAX_N_SECJAWS),
      ANE_SECJAWS($MAX_N_SECJAWS),   BPO_SECJAWS($MAX_N_SECJAWS),
      BNE_SECJAWS($MAX_N_SECJAWS),   BPOT_SECJAWS($MAX_N_SECJAWS,2),
      BNET_SECJAWS($MAX_N_SECJAWS,2),COSP_SECJAWS($MAX_N_SECJAWS),
      COSN_SECJAWS($MAX_N_SECJAWS), XY_SECJAWS,UV_SECJAWS;
   CHARACTER*1 TITLE_SECJAWS(60);

} "end of replacement defining common for this CM"
;
"-------------------------------------------------------------------------------
"     SECJAWS (JAWS) HOWNEAR replacement macro                   ""toc:
"-------------------------------------------------------------------------------
"
REPLACE {SECJAWS_CM_HOWNEAR(#)} WITH {  "{P1} is DNEAR"
"       ==================="
CALL HOWNEAR_SECJAWS({P1});
}
;
REPLACE {SECJAWS_TPOSITIVE;} WITH {;
DIST = (APO_SECJAWS(ISCM_SECJAWS)*Z(NP) +
        BPOT_SECJAWS(ISCM_SECJAWS,IB_SECJAWS)
         - XY_SECJAWS)/(UV_SECJAWS-W(NP)*APO_SECJAWS(ISCM_SECJAWS));
IF(DIST < 0.0)[
   I_tpo = I_tpo + 1;
   DIST = 0.0;
   IF(Z(NP) < ZFRONT_SECJAWS-0.1 | Z(NP) > ZBACK_SECJAWS+0.1 )[
      OUTPUT; (/' ***WARNING in +ve bar of JAWS'/
            ' Particle is well above or below jaw, yet region number '/
            ' indicates the particle is still in the jaw.'/
            ' The particle is being discarded but this is a bug.'/
            ' Please contact the NRC.'/);
      IDISC=1; RETURN;
   ]
   ELSEIF(I_tpo > 20)[
      OUTPUT; (/' ***WARNING in +ve bar of JAWS'/
            ' DIST calculated to jaw opening has been -ve and reset to '/
            ' zero for the past 20 steps.  The particle could be assigned'/
            ' to the wrong region number.  The particle is being discarded'/
            ' but this is a bug.  Please contact the NRC.'/);
      IDISC = 1; I_tpo = 0; RETURN;
   ]
]
ELSE[
   I_tpo = 0;
              "reset counter in case another particle in this history has"
              "this problem"
]
}
;
REPLACE {SECJAWS_TNEGATIVE;} WITH {;
DIST = (ANE_SECJAWS(ISCM_SECJAWS)*Z(NP)+
          BNET_SECJAWS(ISCM_SECJAWS,IB_SECJAWS)
        - XY_SECJAWS)/(UV_SECJAWS-W(NP)*ANE_SECJAWS(ISCM_SECJAWS));
IF(DIST < 0.0)[
   I_tne = I_tne + 1;
   DIST = 0.0;
   IF(Z(NP) < ZFRONT_SECJAWS-0.1 | Z(NP) > ZBACK_SECJAWS+0.1 )[
      OUTPUT; (/' ***WARNING in -ve bar of JAWS'/
            ' Particle is well above or below jaw, yet region number '/
            ' indicates the particle is still in the jaw.'/
            ' The particle is being discarded but this is a bug.'/
            ' Please contact the NRC.'/);
      IDISC=1; RETURN;
   ]
   ELSEIF(I_tne > 20)[
      OUTPUT; (/' ***WARNING in -ve bar of JAWS'/
            ' DIST calculated to jaw opening has been -ve and reset to '/
            ' zero for the past 20 steps.  The particle could be assigned'/
            ' to the wrong region number.  The particle is being discarded'/
            ' but this is a bug.  Please contact the NRC.'/);
      IDISC = 1; I_tne = 0; RETURN;
   ]
]
ELSE[
   I_tne = 0;
              "reset counter in case another particle in this history has"
              "this problem"
]
}
;
REPLACE {SECJAWS_SET_XY_UV(#)} WITH {;
XY_SECJAWS = X(NP);
UV_SECJAWS = U(NP);
IF(IXY_CHOICE_SECJAWS({P1}) = 1)[
   XY_SECJAWS = Y(NP);
   UV_SECJAWS = V(NP);
]
}
"End of JAWS_macros.mortran"
%C80
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc component module macros: stacked planes                     "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          Blake Walters, 1995                                       "
"                                                                             "
"  Contributors:    Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  This code originally evolved from the SLAB component module written by     "
"  Dave Rogers and Bruce Faddegon, starting in 1991, and subsequently edited  "
"  by George Ding.                                                            "
"                                                                             "
"  The contributors named above are only those who could be identified from   "
"  this file's revision history.                                              "
"                                                                             "
"  This code was originally part of the BEAM code system for Monte Carlo      "
"  simulation of radiotherapy treatments units. It was developed at the       "
"  National Research Council of Canada as part of the OMEGA collaborative     "
"  research project with the University of Wisconsin. The system was          "
"  originally described in:                                                   "
"                                                                             "
"  BEAM: A Monte Carlo code to simulate radiotherapy treatment units,         "
"  DWO Rogers, BA Faddegon, GX Ding, C-M Ma, J Wei and TR Mackie,             "
"  Medical Physics 22, 503-524 (1995).                                        "
"                                                                             "
"  BEAM User Manual                                                           "
"  DWO Rogers, C-M Ma, B Walters, GX Ding, D Sheikh-Bagheri and G Zhang,      "
"  NRC Report PIRS-509A (rev D)                                               "
"                                                                             "
"  As well as the authors of this paper and report, Joanne Treurniet of NRC   "
"  made significant contributions to the code system, in particular the GUIs  "
"  and EGS_Windows. Mark Holmes, Brian Geiser and Paul Reckwerdt of Wisconsin "
"  played important roles in the overall OMEGA project within which the BEAM  "
"  code system was developed.                                                 "
"                                                                             "
"  There have been major upgrades in the BEAM code starting in 2000 which     "
"  have been heavily supported by Iwan Kawrakow, most notably: the port to    "
"  EGSnrc, the inclusion of history-by-history statistics and the development "
"  of the directional bremsstrahlung splitting variance reduction technique.  "
"                                                                             "
"#############################################################################"


"-------------------------------------------------------------------------------
"     AIRSLAB (SLABS) miscellaneous replacement macros
"-------------------------------------------------------------------------------
"
REPLACE {$MAX_N_AIRSLAB} WITH {30}          "maximum number of slabs"
;
"-------------------------------------------------------------------------------
"     AIRSLAB component module common                 ""toc:
"-------------------------------------------------------------------------------
"
"V>COMMON/CM_AIRSLAB/
"V>================
"V>ICM_AIRSLAB          CM index, set =ICM in INPUT_AIRSLAB and never re-set
"V>IRSTART_AIRSLAB      first region number for this CM
"V>IREND_AIRSLAB        last region number for this CM
"V>TITLE_AIRSLAB        title of CM
"V>N_AIRSLAB            number of slabs in CM
"V>N_GAP_AIRSLAB        0 if no air gap this CM, = 1 if air gap at top of CM
"V>ZBACK_AIRSLAB(IRL)   Downstream Z boundary of slab IRL in SLABS
"V>ZFRONT_AIRSLAB(IRL)  Upstream Z boundary of slab IRL in SLABS
"V>ZTHICK_AIRSLAB(IRL)  thickness of slab IRL
"V>IR_AIRSLAB           local region number

REPLACE {;COMIN/CM_AIRSLAB/;} WITH {
   ;COMMON/CM_AIRSLAB/ICM_AIRSLAB,IRSTART_AIRSLAB,IREND_AIRSLAB,
   N_AIRSLAB,N_GAP_AIRSLAB,TITLE_AIRSLAB,ZBACK_AIRSLAB,ZFRONT_AIRSLAB,
   ZTHICK_AIRSLAB,IR_AIRSLAB;
   INTEGER ICM_AIRSLAB,IRSTART_AIRSLAB,IREND_AIRSLAB,N_AIRSLAB,
           N_GAP_AIRSLAB,IR_AIRSLAB;
   $REAL ZBACK_AIRSLAB($MAX_N_AIRSLAB),ZFRONT_AIRSLAB($MAX_N_AIRSLAB),
         ZTHICK_AIRSLAB($MAX_N_AIRSLAB);
   CHARACTER*1 TITLE_AIRSLAB(60);
} "end of replacement defining common for this CM"
;
"-------------------------------------------------------------------------------
"     AIRSLAB HOWNEAR replacement macro
"     Now just calls the HOWNEAR_AIRSLAB subroutine
"-------------------------------------------------------------------------------
"
REPLACE {AIRSLAB_CM_HOWNEAR(#)} WITH  {  "{P1} is DNEAR"
CALL HOWNEAR_AIRSLAB({P1});
}
"end of SLABS_macros.mortran"
