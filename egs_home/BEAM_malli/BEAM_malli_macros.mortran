%E
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc macros for component modules                                "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          George Ding, 1992                                         "
"                                                                             "
"  Contributors:    Dave Rogers                                               "
"                   Blake Walters                                             "
"                   Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Mortran macros for the component modules of BEAM. A header for definitions "
"  of $CM_LIST and $CM_TYPE which are added right after this by the scrips to "
"  the .mortjob.mortran file.                                                 "
"                                                                             "
"#############################################################################"


%L
%Q1
%C80
!INDENT F4;
!INDENT M4;
;
" **************************
" List of component modules:
" **************************
"
"  The list of identifiers of components to be included in the accelerator model
"  is defined in the $CM_LIST replacement macro.  This must be modified prior
"  to the MORTRAN compile step in order to generate an executable program with a
"  different sequence and set of component modules.  The component modules must
"  be listed in order of increasing Z.
"
"  The type of each component module is indicated in the $CM_TYPE macro.
"
"  This is the end of beam_cm_macros.hdr but the beam script will insert
"  a couple of macros here with the required lists.
"
" The following is an example for a 2 CM case using CM SLABS and CHAMBER,
"  identifiers FOILS and ION_CH
"
"  REPLACE{$CM_LIST} WITH {CMLIST(
"         ION_CH,
"         FOILS
"     )}
"  REPLACE{$CM_TYPE} WITH {CMTYPE(
"         CHAMBER,
"         SLABS
"     )}
"=======end of example, following this is the real thing============"
"
REPLACE{$CM_LIST} WITH {CMLIST(
      Target,
      FF,
      Chamber,
      Mirror,
      Jaws
   )}
REPLACE{$CM_TYPE} WITH {CMTYPE(
      SLABS,
      FLATFILT,
      CHAMBER,
      MIRROR,
      JAWS
   )}
REPLACE{$SYNC_CM_LIST} WITH {SYNCCMLIST(
      END_SYNC_CMS
   )}
REPLACE{$DYN_CM_LIST} WITH {DYNCMLIST(
      END_DYN_CMS
   )}
REPLACE{$CM_TYPE} WITH {CMTYPE(
      SLABS,
      FLATFILT,
      CHAMBER,
      MIRROR,
      JAWS
   )}
%C80
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc component module macros: stacked planes                     "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          Blake Walters, 1995                                       "
"                                                                             "
"  Contributors:    Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  This code originally evolved from the SLAB component module written by     "
"  Dave Rogers and Bruce Faddegon, starting in 1991, and subsequently edited  "
"  by George Ding.                                                            "
"                                                                             "
"  The contributors named above are only those who could be identified from   "
"  this file's revision history.                                              "
"                                                                             "
"  This code was originally part of the BEAM code system for Monte Carlo      "
"  simulation of radiotherapy treatments units. It was developed at the       "
"  National Research Council of Canada as part of the OMEGA collaborative     "
"  research project with the University of Wisconsin. The system was          "
"  originally described in:                                                   "
"                                                                             "
"  BEAM: A Monte Carlo code to simulate radiotherapy treatment units,         "
"  DWO Rogers, BA Faddegon, GX Ding, C-M Ma, J Wei and TR Mackie,             "
"  Medical Physics 22, 503-524 (1995).                                        "
"                                                                             "
"  BEAM User Manual                                                           "
"  DWO Rogers, C-M Ma, B Walters, GX Ding, D Sheikh-Bagheri and G Zhang,      "
"  NRC Report PIRS-509A (rev D)                                               "
"                                                                             "
"  As well as the authors of this paper and report, Joanne Treurniet of NRC   "
"  made significant contributions to the code system, in particular the GUIs  "
"  and EGS_Windows. Mark Holmes, Brian Geiser and Paul Reckwerdt of Wisconsin "
"  played important roles in the overall OMEGA project within which the BEAM  "
"  code system was developed.                                                 "
"                                                                             "
"  There have been major upgrades in the BEAM code starting in 2000 which     "
"  have been heavily supported by Iwan Kawrakow, most notably: the port to    "
"  EGSnrc, the inclusion of history-by-history statistics and the development "
"  of the directional bremsstrahlung splitting variance reduction technique.  "
"                                                                             "
"#############################################################################"


"-------------------------------------------------------------------------------
"     Target (SLABS) miscellaneous replacement macros
"-------------------------------------------------------------------------------
"
REPLACE {$MAX_N_Target} WITH {30}          "maximum number of slabs"
;
"-------------------------------------------------------------------------------
"     Target component module common                 ""toc:
"-------------------------------------------------------------------------------
"
"V>COMMON/CM_Target/
"V>================
"V>ICM_Target          CM index, set =ICM in INPUT_Target and never re-set
"V>IRSTART_Target      first region number for this CM
"V>IREND_Target        last region number for this CM
"V>TITLE_Target        title of CM
"V>N_Target            number of slabs in CM
"V>N_GAP_Target        0 if no air gap this CM, = 1 if air gap at top of CM
"V>ZBACK_Target(IRL)   Downstream Z boundary of slab IRL in SLABS
"V>ZFRONT_Target(IRL)  Upstream Z boundary of slab IRL in SLABS
"V>ZTHICK_Target(IRL)  thickness of slab IRL
"V>IR_Target           local region number

REPLACE {;COMIN/CM_Target/;} WITH {
   ;COMMON/CM_Target/ICM_Target,IRSTART_Target,IREND_Target,
   N_Target,N_GAP_Target,TITLE_Target,ZBACK_Target,ZFRONT_Target,
   ZTHICK_Target,IR_Target;
   INTEGER ICM_Target,IRSTART_Target,IREND_Target,N_Target,
           N_GAP_Target,IR_Target;
   $REAL ZBACK_Target($MAX_N_Target),ZFRONT_Target($MAX_N_Target),
         ZTHICK_Target($MAX_N_Target);
   CHARACTER*1 TITLE_Target(60);
} "end of replacement defining common for this CM"
;
"-------------------------------------------------------------------------------
"     Target HOWNEAR replacement macro
"     Now just calls the HOWNEAR_Target subroutine
"-------------------------------------------------------------------------------
"
REPLACE {Target_CM_HOWNEAR(#)} WITH  {  "{P1} is DNEAR"
CALL HOWNEAR_Target({P1});
}
"end of SLABS_macros.mortran"
%C80
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc component module macros: photon flattening filter           "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          Blake Walters, 1995                                       "
"                                                                             "
"  Contributors:    Dave Rogers                                               "
"                   Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  The contributors named above are only those who could be identified from   "
"  this file's revision history.                                              "
"                                                                             "
"  This code was originally part of the BEAM code system for Monte Carlo      "
"  simulation of radiotherapy treatments units. It was developed at the       "
"  National Research Council of Canada as part of the OMEGA collaborative     "
"  research project with the University of Wisconsin. The system was          "
"  originally described in:                                                   "
"                                                                             "
"  BEAM: A Monte Carlo code to simulate radiotherapy treatment units,         "
"  DWO Rogers, BA Faddegon, GX Ding, C-M Ma, J Wei and TR Mackie,             "
"  Medical Physics 22, 503-524 (1995).                                        "
"                                                                             "
"  BEAM User Manual                                                           "
"  DWO Rogers, C-M Ma, B Walters, GX Ding, D Sheikh-Bagheri and G Zhang,      "
"  NRC Report PIRS-509A (rev D)                                               "
"                                                                             "
"  As well as the authors of this paper and report, Joanne Treurniet of NRC   "
"  made significant contributions to the code system, in particular the GUIs  "
"  and EGS_Windows. Mark Holmes, Brian Geiser and Paul Reckwerdt of Wisconsin "
"  played important roles in the overall OMEGA project within which the BEAM  "
"  code system was developed.                                                 "
"                                                                             "
"  There have been major upgrades in the BEAM code starting in 2000 which     "
"  have been heavily supported by Iwan Kawrakow, most notably: the port to    "
"  EGSnrc, the inclusion of history-by-history statistics and the development "
"  of the directional bremsstrahlung splitting variance reduction technique.  "
"                                                                             "
"#############################################################################"


"-------------------------------------------------------------------------------
"     CON miscellaneous replacement macros
"-------------------------------------------------------------------------------
REPLACE {$MAX_N_FF} WITH {80}
REPLACE {$MAX_N_SC_FF} WITH {80}
"       ==================="
;
"-------------------------------------------------------------------------------
"     FLATFILT component module common
"-------------------------------------------------------------------------------
"
"V>COMMON/CM_FF/
"V>================
"V>ICM_FF = index of CM, set as ICM in INPUT__$flatfilt and never re-set
"V>IRSTART_FF    = first region number for this CM
"V>IREND_FF      = last region number for this CM
"V>N_FF          = number of regions in CM
"V>TITLE_FF      = title of CM
"V>ISCM_NO_FF    = number of layers in the CM
"V>ISSCM_NO_FF($MAX_N_FF) = number of coaxial cones in each layer
"V>ZMIN_FF($MAX_N_FF)      = Front of each layer
"V>ZMAX_FF       = back of each layer
"V>ZFRONT_FF     = Upstream Z boundary of this CM
"V>RTOP_FF       = radius at front
"V>RBOT_FF       = radius at back
"V>COSA_FF       = cos of the cone
"V>IR_FF         = local region number
;
REPLACE {;COMIN/CM_FF/;} WITH {
   ;COMMON/CM_FF/
      ZMIN_FF,
      ZMAX_FF,
      RTOP_FF,
      RBOT_FF,
      COSA_FF,
      ZFRONT_FF,
      TITLE_FF,
      ICM_FF,
      IRSTART_FF,
      IREND_FF,
      N_FF,
      N_GAP_FF,
      ISCM_NO_FF,
      ISSCM_NO_FF,
      IR_FF,
      ISCM_FF,
      ISCM_FF_C,
      IISSC_FF,
      IISSC_FF_C;
   INTEGER
      ICM_FF,
      IRSTART_FF,
      IREND_FF,
      N_FF,
      N_GAP_FF,
      ISCM_FF,
      ISCM_FF_C,
      IISSC_FF,
      IISSC_FF_C,
      ISCM_NO_FF,
      ISSCM_NO_FF($MAX_N_SC_FF),
      IR_FF;
   $REAL
      ZFRONT_FF,
      RTOP_FF($MAX_N_FF,$MAX_N_SC_FF),
      RBOT_FF($MAX_N_FF,$MAX_N_SC_FF),
      COSA_FF($MAX_N_FF,$MAX_N_SC_FF,2);
   REAL*8
      ZMIN_FF($MAX_N_FF),ZMAX_FF($MAX_N_FF);
      "above needed for cases of very thin slabs P Selvam 2005"
   CHARACTER*1 TITLE_FF(60);
   } "end of replacement defining common for this CM"
;
;
"-------------------------------------------------------------------------------
"     FLAT HOWNEAR replacement macro
" Now just calls HOWNEAR_FF subroutine
"-------------------------------------------------------------------------------
"V>$FLAT_CM_HOWNEAR(#)
"V>===================
"V>
;
REPLACE {FF_CM_HOWNEAR(#);} WITH {
CALL HOWNEAR_FF({P1});
}
;
;
"V>FF_GET_SQXY(#,#);
"V>=============
"V>
;
REPLACE {FF_GET_SQXY(#,#);} WITH {
 ;XF_FF = X(NP)+{P1}*U(NP);
 YF_FF = Y(NP)+{P1}*V(NP);
 {P2} = XF_FF**2 + YF_FF**2;
}

"p outside

REPLACE {FF_GET_DICO_OU(#,#);} WITH {
;
ALO_FF = (RBOT_FF({P1},{P2}-1)
                - RTOP_FF({P1},{P2}-1))/
                (ZMAX_FF({P1}) - ZMIN_FF({P1}));
BLO_FF = RTOP_FF({P1},{P2}-1) - $BDY_TOL
                - ZMIN_FF({P1})*ALO_FF;
IF(X(NP)**2+Y(NP)**2 -(Z(NP)*ALO_FF+
   BLO_FF)**2 < 0.0)[
   "inside cone, change region and return"
   IF(SQRT(X(NP)**2+Y(NP)**2) -Z(NP)*ALO_FF-
   BLO_FF < -$BDY_TOL)[
      I_outside=I_outside+1;
      IF(I_outside>1000)[
         OUTPUT {P2},{P1};
         (/' ***WARNING in cone ',I4,' of layer ',I4,' in FF'/
         ' Particle radial position < radius of cone corresponding to its'/
         ' region no.'/);
         I_outside=0;
      ]
   ]
   IRNEW=IRL-1;
   USTEP=0.0;
   RETURN;
]
ELSE[
   I_outside=0;
]
AUP_FF = U(NP)**2+V(NP)**2 - W(NP)*W(NP)*ALO_FF**2;
BUP_FF = U(NP)*X(NP)+V(NP)*Y(NP)
              - ALO_FF**2*W(NP)*Z(NP)
              - ALO_FF*BLO_FF*W(NP);
CUP_FF = X(NP)**2+Y(NP)**2
              - (Z(NP)*ALO_FF + BLO_FF)**2;
DUP_FF = BUP_FF**2 - AUP_FF*CUP_FF;
IF(DUP_FF <= 0.0 | AUP_FF = 0.0 ) [DIST_COU = 1E5;]
ELSE[
   TQ_FF = - BUP_FF - SIGN(one,BUP_FF)*
                    SQRT(DUP_FF);
   T1_FF = TQ_FF/AUP_FF;
   T2_FF = CUP_FF/TQ_FF;
   DIST_COU = MIN(T1_FF, T2_FF);
   IF(DIST_COU < 0.0) [
      DIST_COU = MAX(T1_FF, T2_FF);
   ]
   IF(DIST_COU <= 0.0) [
       DIST_COU = 1E5;
   ]
   ELSEIF(DIST_COU < $BDY_TOL)[
       DIST_COU = $BDY_TOL;
   ]
]

IF(DIST_COU < DIST)[
   DIST = DIST_COU;
   IRNEW_FF  = IRL - 1;
]
}

"p inside

"V>FF_GET_DICO_IN;
"V>=============
"V>
;
REPLACE {FF_GET_DICO_IN(#,#);} WITH {
ALO_FF = (RBOT_FF({P1},{P2}) - RTOP_FF({P1},{P2}))/
                (ZMAX_FF({P1}) - ZMIN_FF({P1}));
BLO_FF = RTOP_FF({P1},{P2}) + $BDY_TOL
                - ZMIN_FF({P1})*ALO_FF;
IF(X(NP)**2+Y(NP)**2 -(Z(NP)*ALO_FF+
   BLO_FF)**2 > 0.0)[
   "outside cone, change region and return"
   IF(SQRT(X(NP)**2+Y(NP)**2) -Z(NP)*ALO_FF-
   BLO_FF > $BDY_TOL)[
      I_inside=I_inside+1;
      IF(I_inside>1000)[
         OUTPUT {P2},{P1};
         (/' ***WARNING in cone ',I4,' of layer ',I4,' in FF'/
         ' Particle radial position > radius of cone corresponding to its'/
         ' region no.'/);
         I_inside=0;
      ]
   ]
   IRNEW=IRL+1;
   USTEP=0.0;
   RETURN;
]
ELSE[
   I_inside=0;
]
AUP_FF = U(NP)**2 + V(NP)**2 - W(NP)**2*ALO_FF**2;
BUP_FF = U(NP)*X(NP)+V(NP)*Y(NP)
           - ALO_FF**2*W(NP)*Z(NP)
           - ALO_FF*BLO_FF*W(NP);
CUP_FF = X(NP)**2+Y(NP)**2
           -(Z(NP)*ALO_FF+BLO_FF)**2;
DUP_FF = BUP_FF*BUP_FF - AUP_FF*CUP_FF;
IF(AUP_FF ~= 0.0 & DUP_FF >= 0.0)[
   TQ_FF = -BUP_FF - SIGN(one,BUP_FF)*SQRT(DUP_FF);
   T1_FF = TQ_FF/AUP_FF;
   T2_FF = CUP_FF/TQ_FF;
   IF(T1_FF > 0.0 &
      T2_FF > 0.0 )[
      DIST_CIN = MIN(T1_FF, T2_FF);
   ]
   ELSE[
      DIST_CIN = MAX(T1_FF, T2_FF);
   ]
]
ELSE[
   DIST_CIN = 1E5;
  " OUTPUT AUP_FF,DUP_FF;"
  "  (' No hit! in FF_IN_HIT, AUP,DUP =',2F11.5/);"
]
IF(DIST_CIN <= 0.) [
     DIST_CIN = 1E5;
]
ELSEIF(DIST_CIN < $BDY_TOL)[
       DIST_CIN = $BDY_TOL;
]

IF(DIST_CIN < DIST)[
   DIST = DIST_CIN;
   IRNEW_FF  = IRL + 1;
]

}
;

REPLACE {FF_FIND_I_II(#,#);} WITH {
   I1 = 0;
   I2 = 0;
   DO I = 1, ISCM_NO_FF [ " find local region index"
      I2 = I2 + ISSCM_NO_FF(I) + 1;
      IF(IR_FF <= I2)[
         ISCM_FF = I;
         IF(ISCM_FF > 1)[
            DO II = 1, ISCM_FF - 1[
               I1 = I1 + ISSCM_NO_FF(II) + 1;
            ]
         ]
         IISSC_FF = IR_FF - I1;
         EXIT;
      ]
   ]

IF(IR_FF = N_FF + 1 & Z(NP) > ZMIN_FF(1))[
   IDISC = 1;
   RETURN;
]

IF(IISSC_FF_C ~= IISSC_FF | ISCM_FF_C ~= ISCM_FF)[
   IISSC_FF = IISSC_FF_C;
   ISCM_FF = ISCM_FF_C;
]
}


REPLACE {FF_NEGTIVE_USTEP;} WITH {;
IF(USTEP < -$BDY_TOL)[
   OUTPUT IR(NP);(' check negtive IR(NP)=  ', I8);
   OUTPUT ISCM_FF,IISSC_FF;
         ('I,II ', 4I8);
   OUTPUT X(NP),Y(NP),Z(NP),U(NP),V(NP),
          W(NP),SQRT(X(NP)**2+Y(NP)**2),USTEP,DIST;
         ('x,y,z,u,v,w, r,ustep,dist= ',9F12.4);
]
}

REPLACE {FF_CHECK_OUTSIDE;} WITH {;
IF( Z(NP) > ZMAX_FF(ISCM_NO_FF) + $BDY_TOL & W(NP) > 0 )[
  Z(NP) = ZMAX_FF(ISCM_NO_FF);
  CALL WHERE_AM_I(ICM_FF,1);
  RETURN;
]
IF( Z(NP) > ZMAX_FF(ISCM_NO_FF) + $BDY_TOL & W(NP) < 0 )[
  Z(NP) = ZMAX_FF(ISCM_NO_FF);
]
}

"p outside

REPLACE {FF_GET_DICO_OU_WLTZ(#,#);} WITH {
;
ALO_FF = (RBOT_FF({P1},{P2}-1)
                - RTOP_FF({P1},{P2}-1))/
                (ZMAX_FF({P1}) - ZMIN_FF({P1}));
BLO_FF = RTOP_FF({P1},{P2}-1) - $BDY_TOL
                - ZMIN_FF({P1})*ALO_FF;
IF(X(NP)**2+Y(NP)**2 -(Z(NP)*ALO_FF+
   BLO_FF)**2 < 0.0)[
   "inside cone, change region and return"
   IF(SQRT(X(NP)**2+Y(NP)**2) -Z(NP)*ALO_FF-
   BLO_FF < -$BDY_TOL)[
      I_outside=I_outside+1;
      IF(I_outside>1000)[
         OUTPUT {P2},{P1};
         (/' ***WARNING in cone ',I4,' of layer ',I4,' in FF'/
         ' Particle radial position < radius of cone corresponding to its'/
         ' region no.'/);
         I_outside=0;
      ]
   ]
   IRNEW=IRL-1;
   USTEP=0.0;
   RETURN;
]
ELSE[
   I_outside=0;
]
AUP_FF = U(NP)**2+V(NP)**2 - W(NP)*W(NP)*ALO_FF**2;
BUP_FF = U(NP)*X(NP)+V(NP)*Y(NP)
              - ALO_FF**2*W(NP)*Z(NP)
              - ALO_FF*BLO_FF*W(NP);
CUP_FF = X(NP)**2+Y(NP)**2
              - (Z(NP)*ALO_FF + BLO_FF)**2;
DUP_FF = BUP_FF**2 - AUP_FF*CUP_FF;
IF(DUP_FF <= 0.0 | AUP_FF = 0.0 ) [DIST_COU = 1E5;]
ELSE[
   TQ_FF = - BUP_FF - SIGN(one,BUP_FF)*
                    SQRT(DUP_FF);
   T1_FF = TQ_FF/AUP_FF;
   T2_FF = CUP_FF/TQ_FF;
   DIST_COU = MIN(T1_FF, T2_FF);
   IF(DIST_COU < 0.0) [
      DIST_COU = MAX(T1_FF, T2_FF);
   ]
   IF(DIST_COU <= 0.0) [
       DIST_COU = 1E5;
   ]
   ELSEIF(DIST_COU < $BDY_TOL)[
       DIST_COU = $BDY_TOL;
   ]
]
IF(DIST_COU < DIST)[
   DIST = DIST_COU;
   IRNEW_FF  = IRL - 1;
]
}



REPLACE {FF_CHECH_DIST1;} WITH {;
IF(DIST < -$BDY_TOL)[
   OUTPUT IR(NP);(' check dist1 IR(NP)=  ', I8);
   OUTPUT ISCM_FF,IISSC_FF;
         ('I,II ', 4I8);
   OUTPUT X(NP),Y(NP),Z(NP),U(NP),V(NP),
          W(NP),SQRT(X(NP)**2+Y(NP)**2),DIST;
         ('x,y,z,u,v,w, r,dist= ',8F12.4);

]
}
REPLACE {FF_CHECH_DIST2;} WITH {;
IF(DIST < -$BDY_TOL)[
   OUTPUT IR(NP);(' check dist2 IR(NP)=  ', I8);
   OUTPUT ISCM_FF,IISSC_FF;
         ('I,II ', 4I8);
   OUTPUT X(NP),Y(NP),Z(NP),U(NP),V(NP),
          W(NP),SQRT(X(NP)**2+Y(NP)**2),DIST;
         ('x,y,z,u,v,w, r= ',8F12.4);
]
}

REPLACE {FF_CHECH_DIST3;} WITH {;
IF(DIST < -$BDY_TOL)[
   OUTPUT IR(NP);(' check dist3 IR(NP)=  ', I8);
   OUTPUT ISCM_FF,IISSC_FF;
         ('I,II ', 4I8);
   OUTPUT X(NP),Y(NP),Z(NP),U(NP),V(NP),
          W(NP),SQRT(X(NP)**2+Y(NP)**2),DIST;
         ('x,y,z,u,v,w, r= ',8F12.4);
]
}
"End of FLATFILT_macros.mortran"
%C80
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc component module macros: parallel plate monitor chamber     "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          Blake Walters, 1995                                       "
"                                                                             "
"  Contributors:    Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  The contributors named above are only those who could be identified from   "
"  this file's revision history.                                              "
"                                                                             "
"  This code was originally part of the BEAM code system for Monte Carlo      "
"  simulation of radiotherapy treatments units. It was developed at the       "
"  National Research Council of Canada as part of the OMEGA collaborative     "
"  research project with the University of Wisconsin. The system was          "
"  originally described in:                                                   "
"                                                                             "
"  BEAM: A Monte Carlo code to simulate radiotherapy treatment units,         "
"  DWO Rogers, BA Faddegon, GX Ding, C-M Ma, J Wei and TR Mackie,             "
"  Medical Physics 22, 503-524 (1995).                                        "
"                                                                             "
"  BEAM User Manual                                                           "
"  DWO Rogers, C-M Ma, B Walters, GX Ding, D Sheikh-Bagheri and G Zhang,      "
"  NRC Report PIRS-509A (rev D)                                               "
"                                                                             "
"  As well as the authors of this paper and report, Joanne Treurniet of NRC   "
"  made significant contributions to the code system, in particular the GUIs  "
"  and EGS_Windows. Mark Holmes, Brian Geiser and Paul Reckwerdt of Wisconsin "
"  played important roles in the overall OMEGA project within which the BEAM  "
"  code system was developed.                                                 "
"                                                                             "
"  There have been major upgrades in the BEAM code starting in 2000 which     "
"  have been heavily supported by Iwan Kawrakow, most notably: the port to    "
"  EGSnrc, the inclusion of history-by-history statistics and the development "
"  of the directional bremsstrahlung splitting variance reduction technique.  "
"                                                                             "
"#############################################################################"


%Q1
%C80
!INDENT F4;
!INDENT M4;
;
"-------------------------------------------------------------------------------
"     CHAMBER miscellaneous replacement macros
"-------------------------------------------------------------------------------
"
;
REPLACE {$MAX_N_Chamber} WITH {200}
"        ==========="
;
"-------------------------------------------------------------------------------
"     CHAMBER component module common
"-------------------------------------------------------------------------------
"
"V>COMMON/CM_Chamber/
"V>================
"V>ICM_Chamber        = index of CM, set as ICM in INPUT_$tag and never re-set
"V>IRSTART_Chamber    = first region number for this CM
"V>IREND_Chamber      = last region number for this CM
"V>N_Chamber          = number of regions in CM
"V>TITLE_Chamber      = title of CM
"V>ZFRONT_Chamber     = Front of CM (air)
"V>ZBACK_Chamber      = Front of CM (air)
"V>ZMIN_Chamber       = Upstream Z boundary of first cylinder slab
"V>ZMAX_Chamber       = Downstream Z boundary of this CM
"V>Z_Chamber(I)
"V>RCYS_Chamber(I,3)     = radius of a cylindeRS
"V>RCYS2_Chamber(I,3)    = squre of radius of a cylinder
"V>IR_Chamber         = local region number
;
REPLACE {COMIN/CM_Chamber/;} WITH {
   COMMON/CM_Chamber/
      Z_Chamber,
      ZFRONT_Chamber,
      ZBACK_Chamber,
      ZMIN_Chamber,
      ZMAX_Chamber,
      RCYS_Chamber,
      RCYS2_Chamber,
      TITLE_Chamber,
      ICM_Chamber,IRSTART_Chamber,IREND_Chamber,
      N_Chamber,N_GAP_Chamber,
      N_CHM_Chamber, N_TOP_Chamber,
      N_BOT_Chamber,
      IR_Chamber;
   INTEGER
      ICM_Chamber,IRSTART_Chamber,IREND_Chamber,
      N_Chamber ,N_GAP_Chamber,
      N_CHM_Chamber, N_TOP_Chamber,
      N_BOT_Chamber, IR_Chamber;
   $REAL
      ZFRONT_Chamber,
      ZBACK_Chamber,
      ZMIN_Chamber,
      ZMAX_Chamber,
      RCYS_Chamber($MAX_N_Chamber,3),
      RCYS2_Chamber($MAX_N_Chamber,3);
   REAL*8 Z_Chamber(1:$MAX_N_Chamber+1);  "P Selvam change"
   CHARACTER*1 TITLE_Chamber(60);
} "end of replacement defining common for this CM"
;
;
"-------------------------------------------------------------------------------
"     CHAMBER HOWNEAR replacement macro
"-------------------------------------------------------------------------------
"V>Chamber_CM_HOWNEAR(#)
"V>===================
"V>
;
REPLACE {Chamber_CM_HOWNEAR(#);} WITH  { CALL HOWNEAR_Chamber({P1}); }
;
"End of CHAMBER_macros.mortran"
%C80
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc component module macros: mirror plane                       "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          Blake Walters, 1995                                       "
"                                                                             "
"  Contributors:    Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  This code originally evolved from the MIRR component module written by     "
"  George Ding, starting in 1992, and subsequently edited by Charlie Ma.      "
"                                                                             "
"  The contributors named above are only those who could be identified from   "
"  this file's revision history.                                              "
"                                                                             "
"  This code was originally part of the BEAM code system for Monte Carlo      "
"  simulation of radiotherapy treatments units. It was developed at the       "
"  National Research Council of Canada as part of the OMEGA collaborative     "
"  research project with the University of Wisconsin. The system was          "
"  originally described in:                                                   "
"                                                                             "
"  BEAM: A Monte Carlo code to simulate radiotherapy treatment units,         "
"  DWO Rogers, BA Faddegon, GX Ding, C-M Ma, J Wei and TR Mackie,             "
"  Medical Physics 22, 503-524 (1995).                                        "
"                                                                             "
"  BEAM User Manual                                                           "
"  DWO Rogers, C-M Ma, B Walters, GX Ding, D Sheikh-Bagheri and G Zhang,      "
"  NRC Report PIRS-509A (rev D)                                               "
"                                                                             "
"  As well as the authors of this paper and report, Joanne Treurniet of NRC   "
"  made significant contributions to the code system, in particular the GUIs  "
"  and EGS_Windows. Mark Holmes, Brian Geiser and Paul Reckwerdt of Wisconsin "
"  played important roles in the overall OMEGA project within which the BEAM  "
"  code system was developed.                                                 "
"                                                                             "
"  There have been major upgrades in the BEAM code starting in 2000 which     "
"  have been heavily supported by Iwan Kawrakow, most notably: the port to    "
"  EGSnrc, the inclusion of history-by-history statistics and the development "
"  of the directional bremsstrahlung splitting variance reduction technique.  "
"                                                                             "
"#############################################################################"


"-------------------------------------------------------------------------------
"     MIRROR miscellaneous replacement macros
"-------------------------------------------------------------------------------
REPLACE {$MAX_N_Mirror} WITH {10}
"
"-------------------------------------------------------------------------------
"     MIRROR component module common
"-------------------------------------------------------------------------------
"V>COMMON/CM_Mirror/
"V>================
"V>ICM_Mirror        = index of CM, set as ICM in INPUT_$tag and never re-set
"V>IRSTART_Mirror    = first region number for this CM
"V>IREND_Mirror      = last region number for this CM
"V>N_Mirror          = number of slabs of the mirror
"V>TITLE_Mirror      = title of CM
"V>ZFRONT_Mirror     = Front of CM (air)
"V>ZBACK_Mirror      = Back of CM (air)
"V>A_Mirror          = a in X = a*Z + b
"V>BMAX_Mirror       = b in X = a*Z + b
"V>BMIN_Mirror       = b in X = a*Z + b
"v>DTHICK_Mirror($MAX_N_Mirror)  thickness of mirror layers in this CM
"V>IR_Mirror         = local region number
;
REPLACE {;COMIN/CM_Mirror/;} WITH {
   ;COMMON/CM_Mirror/ ICM_Mirror,
      IRSTART_Mirror,IREND_Mirror,   N_Mirror,N_GAP_Mirror,
      IR_Mirror,
      ZFRONT_Mirror,  ZMIN_Mirror,
      ZBACK_Mirror,  A_Mirror,       BMIN_Mirror,
      BMAX_Mirror,   BMINT_Mirror,   BMAXT_Mirror,
      XFMIN_Mirror,  XFMAX_Mirror,   XBMIN_Mirror,
      XBMAX_Mirror,  XFMINT_Mirror,  XFMAXT_Mirror,
      XBMINT_Mirror, XBMAXT_Mirror,  DTHICK_Mirror,
      ZTHICK_Mirror,
      TITLE_Mirror;
   INTEGER ICM_Mirror,IRSTART_Mirror,IREND_Mirror,
           N_Mirror,N_GAP_Mirror,IR_Mirror;
   $REAL
      ZFRONT_Mirror,   ZMIN_Mirror,  ZBACK_Mirror,
      A_Mirror,        BMIN_Mirror($MAX_N_Mirror),
      BMAX_Mirror($MAX_N_Mirror), BMINT_Mirror($MAX_N_Mirror),
      BMAXT_Mirror($MAX_N_Mirror), XFMIN_Mirror($MAX_N_Mirror),
      XFMAX_Mirror($MAX_N_Mirror), XBMIN_Mirror($MAX_N_Mirror),
      XBMAX_Mirror($MAX_N_Mirror), XFMINT_Mirror($MAX_N_Mirror),
      XFMAXT_Mirror($MAX_N_Mirror), XBMINT_Mirror($MAX_N_Mirror),
      XBMAXT_Mirror($MAX_N_Mirror),DTHICK_Mirror($MAX_N_Mirror),
      ZTHICK_Mirror;
   CHARACTER*1 TITLE_Mirror(60);
} "end of replacement defining common for this CM"
;
"-------------------------------------------------------------------------------
"     MIRROR HOWNEAR replacement macro
"  Now just calls HOWNEAR_Mirror subroutine
"-------------------------------------------------------------------------------
"V>Mirror_CM_HOWNEAR(#)
"V>===================
"V>
;
REPLACE {Mirror_CM_HOWNEAR(#);} WITH  {
CALL HOWNEAR_Mirror({P1});
}
"end of MIRROR_macros.mortran"
%C80
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc component module macros: set of paired bars                 "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          George Ding, 1992                                         "
"                                                                             "
"  Contributors:    Blake Walters                                             "
"                   Dave Rogers                                               "
"                   Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  The contributors named above are only those who could be identified from   "
"  this file's revision history.                                              "
"                                                                             "
"  This code was originally part of the BEAM code system for Monte Carlo      "
"  simulation of radiotherapy treatments units. It was developed at the       "
"  National Research Council of Canada as part of the OMEGA collaborative     "
"  research project with the University of Wisconsin. The system was          "
"  originally described in:                                                   "
"                                                                             "
"  BEAM: A Monte Carlo code to simulate radiotherapy treatment units,         "
"  DWO Rogers, BA Faddegon, GX Ding, C-M Ma, J Wei and TR Mackie,             "
"  Medical Physics 22, 503-524 (1995).                                        "
"                                                                             "
"  BEAM User Manual                                                           "
"  DWO Rogers, C-M Ma, B Walters, GX Ding, D Sheikh-Bagheri and G Zhang,      "
"  NRC Report PIRS-509A (rev D)                                               "
"                                                                             "
"  As well as the authors of this paper and report, Joanne Treurniet of NRC   "
"  made significant contributions to the code system, in particular the GUIs  "
"  and EGS_Windows. Mark Holmes, Brian Geiser and Paul Reckwerdt of Wisconsin "
"  played important roles in the overall OMEGA project within which the BEAM  "
"  code system was developed.                                                 "
"                                                                             "
"  There have been major upgrades in the BEAM code starting in 2000 which     "
"  have been heavily supported by Iwan Kawrakow, most notably: the port to    "
"  EGSnrc, the inclusion of history-by-history statistics and the development "
"  of the directional bremsstrahlung splitting variance reduction technique.  "
"                                                                             "
"#############################################################################"


"-------------------------------------------------------------------------------
"     JAWS miscellaneous replacement macros
"-------------------------------------------------------------------------------
REPLACE {$MAX_N_Jaws} WITH {12}
"       ==================="
;
"-------------------------------------------------------------------------------
"     Jaws (JAWS) component module common                  ""toc:
"-------------------------------------------------------------------------------
"
"V>COMMON/CM_Jaws/
"V>================
"V>ICM_Jaws      = CM index, set as ICM in INPUT_Jaws - never re-set
"V>IRSTART_Jaws  = first region number for this CM
"V>IREND_Jaws    = last region number for this CM
"V>N_Jaws        = number of regions in CM
"V>ISCM_MAX_Jaws = number of pired bars in CM
"V>ISCM_Jaws     = index of pired bars in CM
"V>TITLE_Jaws    = title of CM
"V>XY_CHOICE_Jaws = chose X or Y oringtation of the bar
"V>ZBACK_Jaws    = Back of CM
"V>ZFRONT_Jaws   = Front of CM
"V>ZMIN_Jaws(I)  = Zmin of a paired bar
"V>ZMAX_Jaws(I)  = Zmax of a paired bar
"V>XFP_Jaws(I)   = Front of positive bar in this ISCM (X or Y)
"V>XFN_Jaws(I)   = Front of negative bar in this ISCM (X or Y)
"V>XBP_Jaws(I)   = Back of positive bar in this ISCM (X or Y)
"V>XBN_Jaws(I)   = Back of negative bar in this ISCM (X or Y)
"V>XFPT_Jaws(I,2)= Front of positive bar in this ISCM (X or Y)
"V>XFNT_Jaws(I,2)= Front of negative bar in this ISCM (X or Y)
"V>XBPT_Jaws(I,2)= Back of positive bar in this ISCM (X or Y)
"V>XBNT_Jaws(I,2)= Back of negative bar in this ISCM (X or Y)
"V>APO_Jaws(I)   = Slope of positive bar in this ISCM (X or Y)
"V>ANE_Jaws(I)   = Slope of negative bar in this ISCM (X or Y)
"V>BPO_Jaws(I)   = Constant  b of positive bar in equation x = a*z + b
"V>BNE_Jaws(I)   = Constant  b of negative bar in equation x = a*z + b
"V>BPOT_Jaws(I,2)= Constant  b of positive bar in equation x = a*z + b
"V>BNET_Jaws(I,2)= Constant  b of negative bar in equation x = a*z + b
"V>IXY_CHOICE_Jaws(ISCM) = index for x or y bar direction
"V>COSP_Jaws(I)  = cos of positive bar in this ISCM
"V>COSN_Jaws(I)  = cos of negative bar in this ISCM
"V>IR_Jaws       = local region number
"V>ISCM_Jaws     = local sub-component region number
"V>XY_Jaws       = X(NP) or Y(NP)
"V>UV_Jaws       = U(NP) or V(NP)
;
REPLACE {;COMIN/CM_Jaws/;} WITH {
   ;COMMON/CM_Jaws/
      IXY_CHOICE_Jaws,
      APO_Jaws, ANE_Jaws,
      XFP_Jaws,XFPT_Jaws,   XFN_Jaws,XFNT_Jaws,
      XBP_Jaws,XBPT_Jaws,   XBN_Jaws,XBNT_Jaws,
      BPO_Jaws,BPOT_Jaws,   BNE_Jaws,BNET_Jaws,
      ZMIN_Jaws, ZMAX_Jaws, ZBACK_Jaws,ZFRONT_Jaws,
      COSP_Jaws,COSN_Jaws,XY_Jaws,UV_Jaws,
      ICM_Jaws,
      IRSTART_Jaws,  IREND_Jaws,  N_Jaws,  ISCM_MAX_Jaws,
      IR_Jaws, ISCM_Jaws,
      TITLE_Jaws;
   INTEGER
      ICM_Jaws,IRSTART_Jaws,IREND_Jaws,
      N_Jaws,ISCM_MAX_Jaws, IR_Jaws,
      IXY_CHOICE_Jaws($MAX_N_Jaws), ISCM_Jaws;
   $REAL
      ZMIN_Jaws($MAX_N_Jaws),  ZMAX_Jaws($MAX_N_Jaws),
      ZBACK_Jaws, ZFRONT_Jaws,     XFP_Jaws($MAX_N_Jaws),
      XFN_Jaws($MAX_N_Jaws),   XBP_Jaws($MAX_N_Jaws),
      XBN_Jaws($MAX_N_Jaws),   XFPT_Jaws($MAX_N_Jaws,2),
      XFNT_Jaws($MAX_N_Jaws,2),XBPT_Jaws($MAX_N_Jaws,2),
      XBNT_Jaws($MAX_N_Jaws,2),APO_Jaws($MAX_N_Jaws),
      ANE_Jaws($MAX_N_Jaws),   BPO_Jaws($MAX_N_Jaws),
      BNE_Jaws($MAX_N_Jaws),   BPOT_Jaws($MAX_N_Jaws,2),
      BNET_Jaws($MAX_N_Jaws,2),COSP_Jaws($MAX_N_Jaws),
      COSN_Jaws($MAX_N_Jaws), XY_Jaws,UV_Jaws;
   CHARACTER*1 TITLE_Jaws(60);

} "end of replacement defining common for this CM"
;
"-------------------------------------------------------------------------------
"     Jaws (JAWS) HOWNEAR replacement macro                   ""toc:
"-------------------------------------------------------------------------------
"
REPLACE {Jaws_CM_HOWNEAR(#)} WITH {  "{P1} is DNEAR"
"       ==================="
CALL HOWNEAR_Jaws({P1});
}
;
REPLACE {Jaws_TPOSITIVE;} WITH {;
DIST = (APO_Jaws(ISCM_Jaws)*Z(NP) +
        BPOT_Jaws(ISCM_Jaws,IB_Jaws)
         - XY_Jaws)/(UV_Jaws-W(NP)*APO_Jaws(ISCM_Jaws));
IF(DIST < 0.0)[
   I_tpo = I_tpo + 1;
   DIST = 0.0;
   IF(Z(NP) < ZFRONT_Jaws-0.1 | Z(NP) > ZBACK_Jaws+0.1 )[
      OUTPUT; (/' ***WARNING in +ve bar of JAWS'/
            ' Particle is well above or below jaw, yet region number '/
            ' indicates the particle is still in the jaw.'/
            ' The particle is being discarded but this is a bug.'/
            ' Please contact the NRC.'/);
      IDISC=1; RETURN;
   ]
   ELSEIF(I_tpo > 20)[
      OUTPUT; (/' ***WARNING in +ve bar of JAWS'/
            ' DIST calculated to jaw opening has been -ve and reset to '/
            ' zero for the past 20 steps.  The particle could be assigned'/
            ' to the wrong region number.  The particle is being discarded'/
            ' but this is a bug.  Please contact the NRC.'/);
      IDISC = 1; I_tpo = 0; RETURN;
   ]
]
ELSE[
   I_tpo = 0;
              "reset counter in case another particle in this history has"
              "this problem"
]
}
;
REPLACE {Jaws_TNEGATIVE;} WITH {;
DIST = (ANE_Jaws(ISCM_Jaws)*Z(NP)+
          BNET_Jaws(ISCM_Jaws,IB_Jaws)
        - XY_Jaws)/(UV_Jaws-W(NP)*ANE_Jaws(ISCM_Jaws));
IF(DIST < 0.0)[
   I_tne = I_tne + 1;
   DIST = 0.0;
   IF(Z(NP) < ZFRONT_Jaws-0.1 | Z(NP) > ZBACK_Jaws+0.1 )[
      OUTPUT; (/' ***WARNING in -ve bar of JAWS'/
            ' Particle is well above or below jaw, yet region number '/
            ' indicates the particle is still in the jaw.'/
            ' The particle is being discarded but this is a bug.'/
            ' Please contact the NRC.'/);
      IDISC=1; RETURN;
   ]
   ELSEIF(I_tne > 20)[
      OUTPUT; (/' ***WARNING in -ve bar of JAWS'/
            ' DIST calculated to jaw opening has been -ve and reset to '/
            ' zero for the past 20 steps.  The particle could be assigned'/
            ' to the wrong region number.  The particle is being discarded'/
            ' but this is a bug.  Please contact the NRC.'/);
      IDISC = 1; I_tne = 0; RETURN;
   ]
]
ELSE[
   I_tne = 0;
              "reset counter in case another particle in this history has"
              "this problem"
]
}
;
REPLACE {Jaws_SET_XY_UV(#)} WITH {;
XY_Jaws = X(NP);
UV_Jaws = U(NP);
IF(IXY_CHOICE_Jaws({P1}) = 1)[
   XY_Jaws = Y(NP);
   UV_Jaws = V(NP);
]
}
"End of JAWS_macros.mortran"
